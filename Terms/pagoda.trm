# *created  "Wed Feb  3 09:59:26 1999" *by "Paul E. Black"
# *modified "Wed Sep 30 13:20:57 2009" *by "Paul E. Black"

# $Log: pagoda.trm,v $
# Revision 1.7  2009/09/30 17:20:58  black
# Update domain name of Raul Baeza's Handbook of Algorithms and Data Structures
#
# Revision 1.6  2008/08/14 16:15:08  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.5  2004/12/20 14:09:15  black
# Note that merge is called "meld".
#
# Revision 1.4  2004/12/17 21:48:34  black
# Add inital def'n and IMA, etc. links.  Make bib NOTE a BIB.
#
# Revision 1.3  2004/12/17 17:28:30  black
# Make more XHTML compliant.
#
# Revision 1.2  2004/05/24 15:22:47  black
# Change pp. to pages.
#

# entry name
@NAME=pagoda
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {priority queue} implemented with a variant of a {binary
tree}.  The {root} points to its children, as in a binary tree.  Every
other {node} points back to its {parent} and down to its leftmost (if
it is a right {child}) or rightmost (if it is a left child)
{descendant} {leaf}.  The basic operation is merge or {meld}, which
maintains 
the {heap property}.  An element is inserted by merging it as a
singleton.  The {root} is removed by merging its right and left
children.  Merging is bottom-up, merging the leftmost edge of one with
the rightmost edge of the other.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={priority queue}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={binary tree}, {heap property}, {meld}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>J. Francon, G. Viennot, and J. Vuillemin</strong>,
<em>Description and analysis of an efficient priority queue
representation</em>, Proc. 19th Annual Symp. on Foundations of
Computer Science.  IEEE, 1978, pages 1-7.<br />
<strong>R. Nix</strong>, <em>An Evaluation of Pagodas</em>,
Res. Rep. 164, Dept. of Computer Science, Yale Univ.  1988?

# any notes.  these will not be printed in the final dictionary
@NOTES=
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<a
href="http://www.dcc.chileedu.com/~rbaeza/handbook/algs/5/515.del.c">delete
(C and Pascal)</a>, <a
href="http://www.dcc.chileedu.com/~rbaeza/handbook/algs/5/515.ins.c">insert
(C and Pascal)</a>, and <a
href="http://www.dcc.chileedu.com/~rbaeza/handbook/algs/5/515.merg.c">merge
(C and Pascal)</a>
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/pagoda.trm,v $
