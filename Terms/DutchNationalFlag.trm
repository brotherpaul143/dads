# *created  "Wed Sep 16 08:50:40 1998" *by "Paul E. Black"
# *modified "Wed Dec 14 12:58:44 2005" *by "Paul E. Black"

# $Log: DutchNationalFlag.trm,v $
# Revision 1.6  2005/12/14 18:00:17  black
# IMA partition
#
# Revision 1.5  2005/12/14 17:47:56  black
# Separate the Problem from Hoare's algorithm.  Add IMIN multikey Quicksort.
#
# Revision 1.4  2005/04/25 13:13:07  black
# Remove LINK to image at shef.ac.uk - page is gone.
#
# Revision 1.3  2004/12/17 17:12:47  black
# Refine XREFS into IMA, etc.  Make more XHTML compliant.
#
# Revision 1.2  2003/12/01 21:16:27  black
# Remove dead link.  Improve note.  Add RCS keywords.
#

# entry name
@NAME=Dutch national flag
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# basic, search, sort, graph, combin(atorial), etc.
@AREA=sort
# the definition
@DEFN=Rearrange elements in an {array} into three groups: bottom,
middle, and top.
</p>

<p>
One algorithm is to have the top group grow down from the top of the
array, the bottom group grow up from the bottom, and keep the
middle group just above the bottom.  The algorithm stores the
locations just below
the top group, just above the bottom, and just above the middle in three
indexes.  At each step, examine the element just above the middle.
If it belongs to the top group, swap it with the element just below
the top.  If it belongs in the bottom, swap it with the element just
above the bottom.  If it is in the middle, leave it.  Update the
appropriate index.
Complexity is {O(n)#big-O notation} moves and examinations.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={partition}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN={multikey Quicksort}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={American flag sort}

# bib refs, eg, to defining articles (pure HTML).  printed within <p>..</p>.
@BIB=<strong>James R. Bitner</strong>, <em>An Asymptotically Optimal
Algorithm for the Dutch National Flag Problem</em>, SIAM Journal on
Computing, 11(2):243-262, May 1982.
</p>

<p>
<strong>Colin L. McMaster</strong>, <em>An Analysis of Algorithms for
the Dutch National Flag Problem</em>, CACM, 21(10):842-846, October
1978.
</p>

<p>
<strong>E. W. Dijkstra</strong>, A Discipline of Programming,
Prentice-Hall, 1976.
# any notes.  these will not be printed in the final dictionary
@NOTES=Using this algorithm in {quicksort} to {partition} elements,
with the middle group being elements equal to the pivot, lets
quicksort avoid "resorting"
elements that equal the pivot.
</p>

<p>
The first reference I have to this algorithm is the report of someone
hearing it at a lecture at the Institute of Computer Science (ICS),
London University, about 1973.  The algorithm is
named for the problem of ordering red, white, and blue marbles into
the order of the Dutch national flag.
# further explanation (pure HTML)
@LINKS=A <a
href="http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Sort/Flag/">detailed
tutorial</a> on the algorithm.
The flag of the Netherlands or the
<a href="http://www.geographic.org/flags/new1/netherlands_flags.html">Dutch
national flag</a>.
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/DutchNationalFlag.trm,v $
