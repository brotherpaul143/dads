# *created  "Fri Sep 18 10:13:39 1998" *by "Paul E. Black"
# *modified "Mon Aug 24 10:02:34 2009" *by "Paul E. Black"

# $Log: bubblesort.trm,v $
# Revision 1.12  2009/08/24 14:02:50  black
# Update Harrison's sorting demo URL root
#
# Revision 1.11  2009/08/03 13:51:22  black
# update URL for IMPL at Simple Programming Tutorials, now Algorithms
# and Data Structures.
#
# Revision 1.10  2009/01/22 15:54:30  black
# Add Simple programming tutorials' IMPL.
#
# Revision 1.9  2007/12/17 15:42:39  black
# Remove java.sun.com IMPL - page is gone.
#
# Revision 1.8  2007/04/23 13:20:12  black
# Update URL for Mukundan's Java demos and code
#
# Revision 1.7  2006/09/11 13:56:03  black
# Remove LINK to cs.hop.edu algorithm animations - persistent server timeout
#
# Revision 1.6  2005/02/01 20:51:05  black
# IMA {sort}, too (for ontology)
#
# Revision 1.5  2004/12/17 17:23:22  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/08/25 13:50:53  black
# Refine XREFS into IMA, etc.  Note that IMA stable and in-place sort.
# XREF gnome sort, which is prob. better even than bidirectional bubble
# sort.  Add RCS keywords.
#
# Revision 1.3  2003/09/05 12:37:52  black
# Add a Rexx implementation and remove a broken link.
#
# Revision 1.2  2003/09/04 21:25:33  black
# Remove a site no longer found anywhere that I could find
#

# entry name
@NAME=bubble sort
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic, numeric, search, sort, graph, combin(atorial)
@AREA=sort
# the definition
@DEFN=Sort by comparing each adjacent pair of items in a {list} in turn,
swapping the items if necessary, and repeating the pass through the
list until no swaps are done.
# comma-separated list of pure names
@AKA=sinking sort, exchange sort
# other cross-listings solely for the web, such as word or spelling variants
@WEB=sink sort

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={in-place sort}, {stable} {sort}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={gnome sort}, {bidirectional bubble sort}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>Marvin V. Zelkowitz</strong>, <em>Principles of Software
Engineering and Design</em>, Prentice-Hall, page 107, 1979.
# any notes.  these will not be printed in the final dictionary
@NOTES=Complexity is {O(n<sup>2</sup>)#big-O notation} for
arbitrary data, but approaches {$\Theta(n)$#\Theta} if the list is
nearly in order at
the beginning.  Bidirectional bubble sort usually does better since at
least one item is moved forward or backward to its place in the list
with each pass.  Gnome sort optimizes the moving forward and backward
instead of blindly looping through all items.
</p>

<p>
Since at least one item is moved into its final place for each pass,
an improvement is to decrement the last position checked on each
pass.
</p>

<p>
The name "sinking sort" comes from elements sinking down to their 
proper position.
Contributed by Ken Tata (Ken.Tata@onsemi.com) 22 December 2000.
After LK.
# further explanation (pure HTML)
@LINKS=<a
href="http://people.cs.ubc.ca/~harrison/Java/sorting-demo.html">animation
of many sorting algorithms</a>;
<a href="http://www.cosc.canterbury.ac.nz/mukundan/dsal/BSort.html">animation (Java)</a>.
# implementation(s) (pure HTML)
@IMPL=
<a
href="http://people.cs.ubc.ca/~harrison/Java/sorting-demo.html">demonstration
and source code (Java)</a>
- but code might not render properly.
Algorithms and Data Structures'
<a
href="http://www.algolist.net/Algorithms/Sorting/Bubble_sort">explanation
(Java and C++)</a>.
<a href="http://www.markcrocker.com/rexxtipsntricks/rxtt28.2.0469.html">(Rexx)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/bubblesort.trm,v $
