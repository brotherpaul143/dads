# *created  "Mon Sep 27 08:40:55 1999" *by "Paul E. Black"
# *modified "Fri Dec 17 12:24:38 2004" *by "Paul E. Black"

# $Log: shannonFano.trm,v $
# Revision 1.3  2004/12/17 17:24:39  black
# Make more XHTML compliant.
#
# Revision 1.2  2004/11/01 16:58:45  black
# Change encoding to coding
#

# entry name
@NAME=Shannon-Fano coding
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=crypt
# the definition
@DEFN=A variable-length coding based on the frequency of occurrence
of each character.  Divide the characters into two {sets} with the
frequency of each set as close to half as possible, and assign the
sets either 0 or 1 coding.  Repeatedly divide the sets until each
character has a unique coding.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={arithmetic coding}, {Huffman coding}, {Zipf's law}

# any notes.  these will not be printed in the final dictionary
@NOTES=Shannon-Fano is a minimal prefix code. Huffman is optimal for
character coding (one character-one code word) and simple to
program.  Arithmetic coding is better still, since it can allocate
fractional bits, but more complicated.
# further explanation (pure HTML)
@LINKS=Debra A. Lelewer's and Daniel S. Hirschberg's <a
href="http://www.ics.uci.edu/~dan/pubs/DC-Sec3.html">survey of data
compression</a>.
# implementation(s) (pure HTML)
@IMPL=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/shannonFano.trm,v $
