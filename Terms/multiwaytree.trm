# *created  "Mon Dec 14 12:19:58 1998" *by "Paul E. Black"
# *modified "Fri Dec 17 12:12:54 2004" *by "Paul E. Black"

# $Log: multiwaytree.trm,v $
# Revision 1.3  2004/12/17 17:12:55  black
# Refine XREFS into IMA, etc.  Make more XHTML compliant.
#
# Revision 1.2  2003/10/29 18:18:42  black
# Add xrefs to binary tree representation of trees (and RCS keywords)
#

# entry name
@NAME=multiway tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {tree} with any number of {children#child} for each 
{node}.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={binary tree}, {k-ary tree}, {B-tree},

{binary tree representation of trees}
# any notes.  these will not be printed in the final dictionary
@NOTES=A typical implementation is to have a {list} of child nodes at
each node, rather than a fixed number of children.  A more elaborate
implementation is to have a fixed number of children, to handle most
nodes efficiently, and a {linked list} for those rare nodes that
have more children.  See also the {binary tree representation of trees}.
# further explanation (pure HTML)
@LINKS=
# John Morris morris@ee.uwa.edu.au
<a
href="http://ciips.ee.uwa.edu.au/~morris/Year2/PLDS210/n_ary_trees.html">explanation
and example</a>
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/multiwaytree.trm,v $
