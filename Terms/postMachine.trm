# *created  "Mon May  8 12:57:30 2000" *by "Paul E. Black"
# *modified "Thu Aug 31 13:21:13 2023" *by "Paul E. Black"

# $Log: postMachine.trm,v $
# Wed Apr  3 17:04:19 2024  Paul E. Black
# Exapnd Posts name.  Add commented-out notes.
# 
# Tue Aug 15 13:41:40 2023  Paul E. Black
# Add note that Posts paper does not mention queues.
# 
# Mon Dec 21 09:34:25 2020  Paul E. Black
# update St. Andrews mathematicians biography NOTE URL
# 
# Mon Dec 14 10:18:43 2020  Paul E. Black
# Update mathshistory St. Andrews NOTE URL
# 
# Mon Nov 18 11:40:04 2019  Paul E. Black
# update St. Andrews mathematician history NOTE URL
# 
# Mon Mar 25 12:18:53 2019  Paul E. Black
# Update Alex Vinokurs IMPL URL
# 
# Revision 1.5  2006/01/23 16:04:27  black
# Update St. Andrews' mathematician biography URL
#
# Revision 1.4  2005/11/21 14:49:49  black
# Update URL for Vinokur's simulator.
#
# Revision 1.3  2004/12/17 17:28:36  black
# Make more XHTML compliant.
#
# Revision 1.2  2004/06/08 16:57:35  black
# Refine XREFS into IMA, etc.  Link simulator implementation at WPI.

# entry name
@NAME=Post machine
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=
# the definition
@DEFN=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=<strong>Emil Leon Post</strong>, <em>Finite Combinatory Processes -
Formulation 1</em>, Journal of Symbolic Logic, 1, 103-105, 1936.
DOI: <a href="https://doi.org/10.2307/2269031">10.2307/2269031</a>
</br>
Note: this gives a model similar to Turing's, with infinite boxes in either
direction.  It says nothing like queues.
# The presenter below says Post machine is based on queues.  No references
# "Definition and transition functions of Post Machine: Post Machine"
# https://www.youtube.com/watch?v=Wc8iGBB8UyA dated 30 Dec 2021

# "Computability, Complexity, and Languages: Fundamentals of Theoretical
# Computer Science", Martin D. Davis and Elaine J. Weyuker, 1983
# NIST QA267.D38
# defines "Post-Turing Programs" as a certain language. (Chapter 4, pages 82
# et. seq.) "Although the formulation of \mathscr{T} we have presented is closer
# in spirit to that originally given by  Emil Post, it was Turing's analysis ..."
#   CONCLUSION: This uses Post's original definition.

# "Automata Theory, Languages, and Computation", John E. Hopcroft, Rajeev
# Motwani, and Jeffrey D. Ullman, 3rd Edition, 2007.
# NIST QA267.H56
# The only Extensions to the Basic Turing Machine, Chap. 8.4, page 343,
# discussed are multitape Turing machines and nondeterministic Turing
# machines. The only Restricted Turning Machine has a tape with only one
# infinite side. They discuss multistack finite state machine, Chap. 8.5.2 page
# 356, and counter machines, Chap. 8.5.3 page 358.  In the References for
# Chapter 8, "At about the same time [as Turing's work] there were several less
# machine-like proposals for characterizing what can be computed, including the
# work of ... Post". Chap. 8.9, page 374
#   CONCLUSION: This uses Post's original definition.

# any notes.  these are not printed in the final dictionary
@NOTES=Similar to a {Turing machine}, but uses a {queue} instead of an
infinite tape.
# further explanation (pure HTML)
@LINKS=Biography of
<a href="https://mathshistory.st-andrews.ac.uk/Biographies/Post/">Emil
Leon Post</a>.
# implementation(s) (pure HTML)
@IMPL=
Alex Vinokur's
<a href="https://sourceforge.net/projects/turing-machine/">Post machine
simulator (C++)</a>.
# author's initials (see authors.data)
@AUTHOR=
# end $Source: /home/black/Workspace/dads/Terms/RCS/postMachine.trm,v $
