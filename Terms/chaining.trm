# *created  "Tue Apr  6 08:12:37 1999" *by "Paul E. Black"
# *modified "Fri Dec 17 12:23:25 2004" *by "Paul E. Black"

# $Log: chaining.trm,v $
# Revision 1.4  2004/12/17 17:23:26  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/12/01 21:36:25  black
# Reword defn to follow open addressing.
#
# Revision 1.2  2004/12/01 21:33:37  black
# Change defn: chaining may be in the table.  Refine XREFS into IMA,
# etc.  Add xrefs.  Add RCS keywords.
#

# entry name
@NAME=chaining
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic theory numeric search sort tree graph combin para (see areas.data)
@AREA=search
# the definition
@DEFN=A class of {collision resolution schemes} in which 
{linked lists} handle {collisions} in a {hash table}.  The two main
subclasses are {separate chaining},
where lists are outside the table, and {coalesced chaining}, where the
lists are within the table.


#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={collision resolution scheme}
# Specialization: "... is a kind of me."
@VARIANT={coalesced chaining}, {separate chaining}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={load factor}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={open addressing}

# any notes.  these will not be printed in the final dictionary
@NOTES=Any searchable data structure may be used instead of a linked
list, but it is usually better to expand the hash table, thus lowering
the load factor, and use a simple collision resolution mechanism, like
the linked list.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
<a href="http://burtleburtle.net/bob/hash/hashtab.html">(C)</a>
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/chaining.trm,v $
