# *created  "Thu Feb 20 11:48:59 2003" *by "Paul E. Black"
# *modified "Fri Jan 28 17:10:34 2005" *by "Paul E. Black"

# $Log: cuckooHashing.trm,v $
# Revision 1.3  2005/01/28 22:11:31  black
# XREF 2-left hashing.  Change TYPE to data Structure.  Add IMA, IMIN,
# and INME xrefs.
#
# Revision 1.2  2004/12/17 16:49:27  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=cuckoo hashing
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=search
# the definition
@DEFN=A {dictionary} implemented with two {hash tables},
$T<sub>1</sub>$ and $T<sub>2</sub>$, and two different 
{hash functions}, $h<sub>1</sub>$ and $h<sub>2</sub>$.  Each {key}, $k$, is
either in $T<sub>1</sub>[h<sub>1</sub>(k)]$ or
$T<sub>2</sub>[h<sub>2</sub>(k)]$.  A new {key}, $k$, is
stored in $T<sub>1</sub>[h<sub>1</sub>(k)]$.  If that location is already
occupied by another key, $l$, the other key is moved to
$T<sub>2</sub>[h<sub>2</sub>(l)]$.  Key are moved back and forth
until a key moves to an empty location or a limit has been reached.
If the limit is reached, new hash functions are chosen, and the tables
are rehashed.  For tables that are a bit less than half full and
{universal hashing} functions, performance is good.  A key is deleted
by removing it from a table.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={hash table}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN={dictionary}
# Aggregate child: "... is a part of or used in me."
@INME={array}, {hash function}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={2-left hashing}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=<strong>Rasmus Pagh</strong> and <strong>Flemming Friche
Rodler</strong>, <em>Cuckoo Hashing</em>, Proceedings of ESA 2001,
Lecture Notes in Computer Science, vol. 2161, pages 121-?, 2001.
# any notes.  these are not printed in the final dictionary
@NOTES=The name comes from the European cuckoo, whose young
<a
href="http://www.stanfordalumni.org/birdsite/text/essays/Brood_Parasitism.html">pushes
other, competing eggs out of the nest</a>.
# implementation(s) (pure HTML)
@IMPL=
# further explanation (pure HTML)
@LINKS=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/cuckooHashing.trm,v $
