# *created  "Wed Jun  2 13:42:31 1999" *by "Phillip Laplante"
# *modified "Mon Sep 30 14:43:33 2013" *by "Vreda Pieterse"
#
# $Log: longestCommonSubsequence.trm,v $
# Revision "Mon Sep 30 10:09:00 2013" *by "Vreda Pieterse"
# Use {dynamic programming} in LINKS instead of hard-coded link to DADS. 
#
# Revision 1.10  2011/02/28 14:12:43  black
# change DADS URL root.  Again
#
# Revision 1.9  2010/09/27 17:02:19  black
# Update DADS URLs
#
# Revision 1.8  2009/02/04 16:08:08  black
# Update DADS URL root
#
# Revision 1.7  2006/12/18 20:56:55  black
# Remove tiac.net/~cri LINK altogether - Fehrle reports other faults
# that he could find simple fixes for.
#
# Revision 1.6  2006/12/13 17:04:12  black
# Add bug report for pseudocode in tiac.net/~cri LINK
#
# Revision 1.5  2006/05/11 19:50:29  black
# Add Wikipedia and minimal longest ascedning subseqence LINKs
#
# Revision 1.4  2004/12/17 17:12:51  black
# Refine XREFS into IMA, etc.  Make more XHTML compliant.
#
# Revision 1.3  2003/11/19 15:06:08  black
# add xref to shortest common supersequence
#
# Revision 1.2  2003/11/19 14:47:50  black
# Differentiate between longest common substring and longest common
# subsequence.  Add new line.
#

# entry name
@NAME=longest common subsequence
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=search
# the definition
@DEFN=The problem of finding a maximum length (or maximum weight)
{subsequence} of two or more {strings}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=heaviest common subsequence
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={Ratcliff/Obershelp pattern recognition},
{longest common substring}, {shortest common supersequence}

# any notes.  these will not be printed in the final dictionary
@NOTES=
The longest common substring is contiguous, while the longest common
subsequence need not be.
</p>

<p>
From Algorithms and Theory of Computation Handbook, page 13-17,
Copyright &copy; 1999 by CRC Press LLC.
Appearing in the Dictionary of Computer Science, Engineering and
Technology, Copyright &copy; 2000 CRC Press LLC.
# further explanation (pure HTML)
@LINKS=
Dan Hirschberg's <a
href="http://www.ics.uci.edu/~dan/class/161/notes/6/Dynamic.html">pseudocode</a>
as an example of {dynamic programming}
<a
href="http://en.wikipedia.org/wiki/Longest-common_subsequence_problem">Longest-common
subsequence problem</a> in Wikipedia.
# implementation(s) (pure HTML)
@IMPL=<a
href="http://www.cs.sunysb.edu/~algorith/files/longest-common-substring.shtml">(C
and Mathematica)</a>
# author's initials (see authors.data)
@AUTHOR=CRC-A
# end $Source: /home/black/Workspace/dads/Terms/RCS/longestCommonSubsequence.trm,v $
