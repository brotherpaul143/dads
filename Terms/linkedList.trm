# *created  "Fri Sep 18 10:03:43 1998" *by "Paul E. Black"
# *modified "Wed Oct  6 11:05:26 2010" *by "Paul E. Black"

# $Log: linkedList.trm,v $
# Revision 1.14  2010/10/06 15:05:40  black
# Add that binary search may be effective in some cases.
#
# Revision 1.13  2009/08/03 14:27:07  black
# update URL for IMPL at Simple Programming Tutorials, now Algorithms
# and Data Structures
#
# Revision 1.12  2009/02/17 13:57:04  black
# Remove skyscraper URL - page is gone.
#
# Revision 1.11  2009/01/22 16:22:28  black
# Add Simple programming tutorials' IMPL.
#
# Revision 1.10  2008/11/17 17:51:56  black
# Remove Kazlib IMPL - its been gone at least 3 months.
#
# Revision 1.9  2008/09/29 15:48:43  black
# NOTE that a linked list may be used to implement a sparse matrix.
#
# Revision 1.8  2007/04/23 13:20:44  black
# Update URL for Mukundan's Java demos and code
#
# Revision 1.7  2006/09/11 14:04:10  black
# Update tutorial IMPL URL
#
# Revision 1.6  2005/10/27 14:01:32  black
# Update John Morris' URL
#
# Revision 1.5  2005/10/27 13:17:43  black
# Add particularly good sort algorithms: radix and strand
#
# Revision 1.4  2004/12/17 17:24:13  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/08/16 15:37:08  black
# Remove XREF to skip list since it is an ordered linked list, not just
# a linked list.  Refine XREFS into IMA, etc.  Add RCS keywords.
#
# Revision 1.2  2003/09/04 21:25:33  black
# Remove a site no longer found anywhere that I could find
#

# entry name
@NAME=linked list
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial)
@AREA=basic
# the definition
@DEFN=A {list} implemented by each item having a {link}
to the next item.  
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=singly linked list
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT={doubly linked list}, {ordered linked list}, {circular list}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={move-to-front heuristic}, 
sort algorithms: {radix sort}, {strand sort}

# any notes.  these will not be printed in the final dictionary
@NOTES=The first item, or {head}, is
accessed from a fixed location, called a ``head pointer.''
An ordinary linked list must be searched with a 
{linear search}.  Average search time may be improved using a 
{move-to-front heuristic} or keeping it an
{ordered linked list}, in which binary search may be effective; see below.
An {external index}, such as a {hash table}, {inverted index}, or
auxiliary {search tree} may be used as a ``cross index'' to help find
items quickly.
</p>

<p>
{Binary search} may be effective with an 
{ordered#ordered linked list}, {doubly linked list}.
It makes O(n) traversals, as does linear search, but it
only performs O(log n) comparisons.
For more explanation, see Tim Rolfe's
<a href="http://penguin.ewu.edu/~trolfe/Nifty2010/LinkedListBinarySearch/Asg2.html">Searching in a Sorted Linked List</a>.
</p>

<p>
A linked list can be used to implement other data structures,
such as a {queue}, a {stack}, or a {sparse matrix}.
# further explanation (pure HTML)
@LINKS=
# John Morris morris@ee.uwa.edu.au
an <a
href="http://www.cs.auckland.ac.nz/software/AlgAnim/lists.html">introduction</a>,
a Java applet <a href="http://www.cosc.canterbury.ac.nz/mukundan/dsal/LinkListAppl.html">animation (Java)</a>.
# implementation(s) (pure HTML)
@IMPL=
<a href="http://www.cs.rpi.edu/~musser/gp/lists.html">explanations,
examples, iterators, sorting lists, etc. (C++)</a>.
Bro. David Carlson's
<a
href="http://cis.stvincent.edu/html/tutorials/swd/lists/lists.html">tutorial
and code (C++)</a>.
Algorithms and Data Structures'
<a
href="http://www.algolist.net/Data_structures/Singly-linked_list">explanation
(Java and C++)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/linkedList.trm,v $
