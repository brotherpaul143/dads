# *created  "Fri Jun  2 13:45:08 2006" *by "Paul E. Black"
# *modified "Thu Apr 21 14:49:16 2022" *by "Paul E. Black"

# $Log: pigeonholeSort.trm,v $
# Thu Apr 21 14:32:17 2022  Paul E. Black
# Add Python IMPL
# 
# Mon Feb 11 17:11:12 2019  Paul E. Black
# use https to access Wikipedia
# 
# Revision 1.3  2006/06/19 14:54:41  black
# Improve DEFN slightly.  Rapid sort is a VARIANT.  NOTE contrast
# between this and rapid sort.
#
# Revision 1.2  2006/06/02 18:53:20  black
# Fix DEFN: efficient when |items| \approx= Range(keys).
#
# Revision 1.1  2006/06/02 18:44:04  black
# Initial revision
#

# entry name
@NAME=pigeonhole sort
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=sort
# the definition
@DEFN=A 2-pass {sort} algorithm that is efficient when the range of
{keys} is approximately equal to the number of items.  The first pass
allocates an {array} of {buckets}, one bucket for each possible {key}
value, then moves each item to its key's bucket.  The second pass goes
over the bucket array moving each item to the next place in the
destination.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as name or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={range sort}
# Specialization: "... is a kind of me."
@VARIANT={rapid sort}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={counting sort}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
#<strong>Paul E. Black</strong>, <em>Hypothetical Intelligence</em>,
#Proc. Everything XV, Provo, Utah, USA, 2(7):30-32, February 1997.

# any notes.  these are not printed in the final dictionary
@NOTES=The bucket array is called the pigeonhole array.
</p>

<p>
Pigeonhole sort moves items twice: once to the bucket array and
again to the final destination.  Counting sort builds an auxiliary
array then uses the array to compute each item's final destination and
move the item there.  Since rapid sort only sorts keys, "moving an
item in its key's bucket" is just incrementing a count and "moving
each item to the destination" is writing the proper number of keys.

# any historical notes
@HISTORY=

# implementation(s) (pure HTML)
@IMPL=
<a href="https://www.geeksforgeeks.org/python-program-for-pigeonhole-sort/">(Python)</a>.

# further explanation (pure HTML)
@LINKS=
See the Wikipedia
<a href="https://en.wikipedia.org/wiki/Pigeonhole_sort">entry</a>.
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/pigeonholeSort.trm,v $
