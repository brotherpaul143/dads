# *created  "Mon Jan  4 09:05:07 1999" *by "Paul E. Black"
# *modified "Mon Jun 21 09:10:34 2021" *by "Paul E. Black"

# $Log: binarySearchTree.trm,v $
# Tue Nov 12 10:03:07 2019  Paul E. Black
# Update Ben Pfaff IMPL URL
# 
# Tue Oct  1 16:30:47 2019  Paul E. Black
# Update Goletas IMPL URL and make it specific.
# 
# Mon Apr 22 12:13:15 2019  Paul E. Black
# Remove LINK to Mukundans animation: no longer available.
# 
# Tue Feb 19 10:47:24 2019  Paul E. Black
# Remove Gross IMPL - no longer found
# 
# Tue Feb 12 09:38:39 2019  Paul E. Black
# update access to rbaeza handbook
# 
# Mon Jan 26 10:36:06 2015  Paul E. Black
# Update URL of IMPL in Michael Gross slides
# 
# Mon Jul  7 09:36:32 2014  Paul E. Black
# Update Goletas C# Collections IMPL URL
# 
# Revision 1.27  2011/12/12 15:12:08  black
# update IMPL URL for Spring97 UCSC slide
#
# Revision 1.26  2011/06/20 13:52:05  black
# update UCSC IMPL URL.
#
# Revision 1.25  2011/05/23 14:28:52  black
# update URL of Pfaff's IMPL and what is in Goleta's collection.
#
# Revision 1.24  2011/05/23 13:23:48  black
# update URL for Maksim Goleta's C# Collections
#
# Revision 1.23  2009/11/16 14:52:03  black
# Update domain name of Ricardo Baeza-Yates' Handbook of Algorithms and Data Structures
#
# Revision 1.22  2009/09/30 17:19:51  black
# Update domain name of Raul Baeza's Handbook of Algorithms and Data Structures
#
# Revision 1.21  2009/08/03 13:41:49  black
# update URL for IMPL at Simple Programming Tutorials, now Algorithms
# and Data Structures.
#
# Revision 1.20  2009/01/22 16:25:54  black
# Add Simple programming tutorials' IMPL.
#
# Revision 1.19  2008/08/18 13:25:27  black
# Remove Kaz's IMPL - it has been off line for at least a month.
#
# Revision 1.18  2007/04/23 13:39:38  black
# Update UCSC IMPL
#
# Revision 1.17  2007/04/23 13:19:51  black
# Update URL for Mukundan's Java demos and code
#
# Revision 1.16  2006/05/31 12:51:48  black
# Improve attribution: change Goletas' to Maksim Goleta's
#
# Revision 1.15  2006/05/31 12:42:07  black
# Add Goletas' C# IMPL
#
# Revision 1.14  2005/07/05 14:29:02  black
# Remove another Oberlin IMPL - its gone, too.
#
# Revision 1.13  2005/05/31 18:18:43  black
# Remove LINKS to Oberlin - pages seem to be gone.
#
# Revision 1.12  2004/12/17 19:04:06  black
# Fix ref to tree sort which IMIN.
#
# Revision 1.11  2004/12/17 17:23:15  black
# Make more XHTML compliant.
#
# Revision 1.10  2004/11/29 17:28:54  black
# Add IMIN tree sort.
#
# Revision 1.9  2004/10/14 20:16:20  black
# Add Kaz's Austin IMPL.
#
# Revision 1.8  2004/10/06 16:21:57  black
# Fix mistake: a binary priority queue does NOT use a BST.
#
# Revision 1.7  2004/10/06 15:04:56  black
# Use "key" instead of "value".  Note that IMA search tree and IMIN
# binary priority queue.
#
# Revision 1.6  2004/09/07 16:27:49  black
# Update Ben Pfaff's URL (again).
#
# Revision 1.5  2004/04/07 13:00:10  black
# Update Ben Pfaff's URL.
#
# Revision 1.4  2004/01/12 14:48:40  black
# Add RCS log and refine XREFS into IMA, etc.  Remove bad link.
#
# Revision 1.3  2003/09/25 15:26:24  black
# Add XREF to jump list.  Update links.
#
# Revision 1.2  2003/09/04 21:25:33  black
# Remove a site no longer found anywhere that I could find
#

# entry name
@NAME=binary search tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {binary tree} where every {node's#node} left 
{subtree} has {keys} less than the node's key, and every right
subtree has keys greater than the node's key.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={binary tree}, {search tree}
# Specialization: "... is a kind of me."
@VARIANT={AVL tree}, {splay tree}, {threaded tree}, 
{randomized binary search tree}, {discrete interval encoding tree}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={treesort (1)}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={relaxed balance}, {ternary search tree}, 
{move-to-root heuristic}, {jump list}

# any notes.  these will not be printed in the final dictionary
@NOTES=A binary search tree is almost always implemented with
pointers, but may have a variety of constraints on how it is composed.
# further explanation (pure HTML)
@LINKS=

# implementation(s) (pure HTML)
@IMPL=
Ben Pfaff's 
<a href="https://adtinfo.org/libavl.html/Binary-Search-Trees.html">insert,
delete, search, copy, etc. (literate C)</a>;
Maksim Goleta's C# Collections uses it to
<a href="https://github.com/Goleta/csharp-collections/blob/master/Goletas.Collections/SortedSet.cs">implement sorted set
(C#)</a>.
<a
href="https://users.dcc.uchile.cl/~rbaeza/handbook/algs/3/3411.ins.c">insert
(C)</a>,
<a
href="https://users.dcc.uchile.cl/~rbaeza/handbook/algs/3/3411.srch.c">search
(C)</a>.
Algorithms and Data Structures'
<a
href="https://www.algolist.net/Data_structures/Binary_search_tree">explanation
with links to add, delete, search, and output values in order (Java
and C++)</a>.
<a 
href="http://www.csc.twu.ca/rsbook/index.html?http://www.csc.twu.ca/rsbook/Ch14/Ch14.8.html">Insert,
search, delete, and various traversals (Modula-2)</a> (use must be
acknowledged).
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/binarySearchTree.trm,v $
