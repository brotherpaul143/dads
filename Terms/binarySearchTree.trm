# *created  "Mon Jan  4 09:05:07 1999" *by "Paul E. Black"
# *modified "Mon Nov 29 12:28:22 2004" *by "Paul E. Black"

# $Log: binarySearchTree.trm,v $
# Revision 1.10  2004/11/29 17:28:54  black
# Add IMIN tree sort.
#
# Revision 1.9  2004/10/14 20:16:20  black
# Add Kaz's Austin IMPL.
#
# Revision 1.8  2004/10/06 16:21:57  black
# Fix mistake: a binary priority queue does NOT use a BST.
#
# Revision 1.7  2004/10/06 15:04:56  black
# Use "key" instead of "value".  Note that IMA search tree and IMIN
# binary priority queue.
#
# Revision 1.6  2004/09/07 16:27:49  black
# Update Ben Pfaff's URL (again).
#
# Revision 1.5  2004/04/07 13:00:10  black
# Update Ben Pfaff's URL.
#
# Revision 1.4  2004/01/12 14:48:40  black
# Add RCS log and refine XREFS into IMA, etc.  Remove bad link.
#
# Revision 1.3  2003/09/25 15:26:24  black
# Add XREF to jump list.  Update links.
#
# Revision 1.2  2003/09/04 21:25:33  black
# Remove a site no longer found anywhere that I could find
#

# entry name
@NAME=binary search tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {binary tree} where every {node's#node} left 
{subtree} has {keys} less than the node's key, and every right
subtree has keys greater than the node's key.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={binary tree}, {search tree}
# Specialization: "... is a kind of me."
@VARIANT={AVL tree}, {splay tree}, {threaded tree}, 
{randomized binary search tree}, {discrete interval encoding tree}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={tree sort}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={relaxed balance}, {ternary search tree}, 
{move-to-root heuristic}, {jump list}

# any notes.  these will not be printed in the final dictionary
@NOTES=A binary search tree is almost always implemented with
pointers, but may have a variety of constraints on how it is composed.
# further explanation (pure HTML)
@LINKS=<A
href="http://www.cs.oberlin.edu/classes/dragn/labs/avl/avl3.html#@l13">lecture
notes</A>
and <A 
href="http://www.cse.ucsc.edu/classes/cmps012b/Spring97/Lecture17/sld006.htm">two
different deletion algorithms</A>.
A <A
href="http://www.cosc.canterbury.ac.nz/people/mukundan/dsal/BST.html">demonstration</A>.
# implementation(s) (pure HTML)
@IMPL=
Ben Pfaff's 
<A href="http://www.stanford.edu/~blp/avl/libavl.html/Binary-Search-Trees.html">insert,
delete, search, copy, etc. (literate C)</A>;
Kaz Kylheku's
<A href="http://users.footprints.net/~kaz/austin.html">Austin (C)</A>
implementing sorted list, binary search tree, AVL, red-black and splay
trees and conversions from any of these to any other.
<A
href="http://www.cse.ucsc.edu/classes/cmps012b/Spring97/Lecture16/sld013.htm">insert
(C)</A>,
<A
href="http://www.cs.oberlin.edu/classes/dragn/labs/avl/avl30.html">insert
(Lisp)</A>, 
<A
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/3411.ins.c">insert
(C)</A>,
<A
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/3411.srch.c">search
(C)</A>,
and 
<A 
href="http://www.csc.twu.ca/rsbook/index.html?http://www.csc.twu.ca/rsbook/Ch14/Ch14.8.html">insert,
search, delete, and various traversals (Modula-2)</A> (use must be
acknowledged).
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/binarySearchTree.trm,v $
