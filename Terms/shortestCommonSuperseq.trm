# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Fri Dec 17 12:14:19 2004" *by "Paul E. Black"

# $Log: shortestCommonSuperseq.trm,v $
# Revision 1.3  2004/12/17 17:14:19  black
# Refine XREFS into IMA, etc.
#
# Revision 1.2  2003/11/19 15:10:26  black
# Define and differentiate between this and shortest common subSTRING.
# Remove implementation link since it is for the substring problem.
# Change type and area to be the same as related problems.
#

# entry name
@NAME=shortest common supersequence
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=Find the shortest string that contains two or more {strings} as
{subsequences}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={shortest common superstring}, {longest common subsequence}

# any notes.  these will not be printed in the final dictionary
@NOTES=
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/DADS/Terms/RCS/shortestCommonSuperseq.trm,v $
