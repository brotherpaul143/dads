# *created  "Wed Jun  2 13:42:31 1999" *by "Phillip Laplante"
# *modified "Fri Dec 17 11:52:26 2004" *by "Paul E. Black"

# $Log: internalsort.trm,v $
# Revision 1.2  2004/12/17 16:52:27  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=internal sort
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=sort
# the definition
@DEFN=Any {sort} algorithm which uses exclusively main memory during the sort.  This assumes high-speed random access to all memory.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={external sort}, {quicksort}, {insertion sort}

# any notes.  these will not be printed in the final dictionary
@NOTES=Although virtual memory may hide the use of disk, an internal sort is written as if all memory is equally accessible.
From Algorithms and Theory of Computation Handbook, page 3-23,
Copyright &copy; 1999 by CRC Press LLC.
Appearing in the Dictionary of Computer Science, Engineering and
Technology, Copyright &copy; 2000 CRC Press LLC.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<a href="http://gams.nist.gov/serve.cgi/Class/N6a">(Fortran)</a>
# author's initials (see authors.data)
@AUTHOR=CRC-A
# end $Source: /home/black/DADS/Terms/RCS/internalsort.trm,v $
