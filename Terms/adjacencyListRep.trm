# *created  "Thu May 13 10:18:15 1999" *by "Paul E. Black"
# *modified "Fri Oct 15 10:17:04 2021" *by "Paul E. Black"

# $Log: adjacencyListRep.trm,v $
# Fri Oct 15 16:41:29 2021  Paul E. Black
# Add Sedgewick and Wayne "Algorithms" IMPL
# 
# Revision 1.5  2008/08/14 16:12:01  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.4  2004/12/17 17:27:37  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/04/19 18:32:23  black
# Use the standard English plural of vertex
#
# Revision 1.2  2003/10/16 17:03:35  black
# Use a more regular plural of vertex
#

# entry name
@NAME=adjacency-list representation
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=graph
# the definition
@DEFN=A representation of a {directed graph} with $n$
{vertices#vertex} using an {array} of $n$ {lists} of vertices.  List
$i$ contains vertex $j$ if there is an {edge} from
vertex $i$ to vertex $j$.  A {weighted graph} may be
represented with a list of vertex/weight pairs.  An {undirected graph}
may be represented by having vertex $j$ in the list for vertex $i$
and vertex $i$ in the list for vertex $j$.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=adjacency list

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={adjacency-matrix representation}, {sparse graph}

# any notes.  these will not be printed in the final dictionary
@NOTES=
Suppose we have a directed graph with four vertices.  Here are
adjacency-matrix and adjacency-list representations.  The arrow (-&gt;)
means a link in a list.
<p>
<pre>
   1 2 3 4<br />
1  1 1 1 1<br />
2  1 0 0 0<br />
3  0 1 0 1<br />
4  0 1 1 0<br />
</pre>
</p>
<p>
<pre>
1  -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4<br />
2  -&gt; 1<br />
3  -&gt; 2 -&gt; 4<br />
4  -&gt; 2 -&gt; 3<br />
</pre>
</p>

<p>
One variant is to have an array of columns, rather than rows, with the
list going "down".  The adjacency-list representation is more compact
for a {sparse matrix}.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
Sedgewick and Wayne "Algorithms" 4th edition's
<a href="https://algs4.cs.princeton.edu/42digraph/">implementation
(Java)</a>.

# author's initials (see authors.data)
@AUTHOR=BB,PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/adjacencyListRep.trm,v $
