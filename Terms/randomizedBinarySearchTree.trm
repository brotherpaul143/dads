# *created  "Wed Feb 24 15:03:32 1999" *by "Paul E. Black"
# *modified "Tue Sep  7 09:36:31 2010" *by "Paul E. Black"

# $Log: randomizedBinarySearchTree.trm,v $
# Revision 1.7  2010/09/07 13:37:30  black
# Update URL for Kiselyov's IMPL
#
# Revision 1.6  2007/04/30 14:38:51  black
# IMA treap
#
# Revision 1.5  2005/07/11 13:38:50  black
# Remove LINKS to papers at UPC - searching the tech reports didn't find
# them, either.
#
# Revision 1.4  2005/04/11 15:59:16  black
# Update URLs for LINKS to Randomized papers.
#
# Revision 1.3  2005/01/10 14:29:04  black
# Update Oleg Kiselyov's URL
#
# Revision 1.2  2004/12/17 16:54:02  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=randomized binary search tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic theory numeric search sort tree graph combin(atorial) para(llel) crypt
@AREA=tree
# the definition
@DEFN=A {binary search tree} in which {nodes} have a randomly assigned
priority.  Updates keep priorities in {heap} order instead of keeping
{balance} information and doing {rebalance} operations.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=cartesian tree, RBST
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={treap}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={randomized search tree}

# bib refs, eg, to defining articles (pure HTML).  printed within <p>..</p>.
@BIB=<strong>Conrado Martinez and Salvador Roura</strong>,
<em>Randomized Binary Search Trees</em>, Journal of the ACM,
45(2):288-323, March 1998.
</p>

<p>
<strong>Jean Vuillemin</strong>, <em>A Unifying Look at Data
Structures</em>, CACM, 23(4):229-239, April 1980.
# any notes.  these will not be printed in the final dictionary
@NOTES=Also called a treap, but strictly a treap does not define how
priorities are assigned.
</p>

<p>
Because of the random priority, the trees are always expected to be
nearly balanced, regardless of the number, kind and order of updates made.  
The expected {worst case} is {O(log n)#big-O notation} for any update or
search in a RBST of size $n$.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=Oleg Kiselyov's
<a href="http://okmij.org/ftp/Scheme/lib/treap.scm">treap
implementation (Scheme)</a> and
<a href="http://okmij.org/ftp/Scheme/#treaps">verification code and
other links</a>.
# author's initials
@AUTHOR=CM
# end $Source: /home/black/DADS/Terms/RCS/randomizedBinarySearchTree.trm,v $
