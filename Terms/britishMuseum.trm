# *created  "Tue Nov  2 13:00:29 1999" *by "Paul E. Black"
# *modified "Wed Jan 12 13:33:49 2005" *by "Paul E. Black"

# $Log: britishMuseum.trm,v $
# Revision 1.5  2005/01/12 18:33:57  black
# IMA breadth-first search.
#
# Revision 1.4  2005/01/12 18:31:20  black
# Change NAME: this is an algorithmic technique, not an algorithm per se.
# Improve wording of DEFN.
#
# Revision 1.3  2005/01/12 16:40:07  black
# IMA exhaustive search.  Change file name.
#
# Revision 1.2  2004/12/17 16:48:50  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=British Museum technique
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=T
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=theory
# the definition
@DEFN=Find a solution by checking all
possibilities one by one, beginning with the smallest.  This is a
conceptual, not a practical, technique where the number of
possibilities are enormous.
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as name or spelling variants
@WEB=British Museum algorithm

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={exhaustive search}, {breadth-first search}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={brute force}

# any notes.  these will not be printed in the final dictionary
@NOTES=For instance, one may, in theory, find the smallest program
that solves a particular problem in the following way:
Generate all possible source codes of length one character.  Check
each one to see if it solves the problems.  (Note: the {halting
problem} makes this check troublesome.)  If not, generate and check
all programs of two characters, three characters, etc.
Conceptually this finds the smallest program, but in practice it takes
far more time than the age of the universe.
</p>

<p>
Similar arguments can be made to show that optimizations, theorem
proving, language recognition, etc. is possible or impossible.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/britishMuseum.trm,v $
