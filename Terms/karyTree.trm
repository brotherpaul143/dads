# *created  "Thu Jan 14 13:58:29 1999" *by "Paul E. Black"
# *modified "Thu Oct 27 10:00:59 2005" *by "Paul E. Black"

# $Log: karyTree.trm,v $
# Revision 1.4  2005/10/27 14:01:04  black
# Update John Morris' URL
#
# Revision 1.3  2005/02/01 20:00:39  black
# Change TYPE from D to S (for ontology).
#
# Revision 1.2  2004/12/17 16:52:40  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=k-ary tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {tree} with no more than <strong>k</strong>
{children#child} for each {node}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=k-way tree
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={multiway tree}

# any notes.  these will not be printed in the final dictionary
@NOTES=A k-ary tree may be thought of as a multiway trees limited to
<strong>k</strong> children.
# further explanation (pure HTML)
@LINKS=
# John Morris morris@ee.uwa.edu.au
<a
href="http://www.cs.auckland.ac.nz/software/AlgAnim/n_ary_trees.html">explanation
and example</a>
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/karyTree.trm,v $
