# *created  "Wed Nov 19 09:25:46 2003" *by "Paul E. Black"
# *modified "Tue Sep  2 08:43:15 2014" *by "Paul E. Black"

# $Log: longestCommonSubstring.trm,v $
# Tue Sep  2 08:43:21 2014  Paul E. Black
# Change stonybrook.edu URL in IMPL
# 
# Mon Jul 28 16:22:38 2014  Paul E. Black
# update URL for Skienas Stony Brook Algorithm Respository IMPLs
# 
# Revision "Mon Sep 30 10:12:07 2013" *by "Vreda Pieterse"
# Use {dynamic programming} in LINKS instead of hard-coded link to DADS. 
# 
# Revision 1.6  2011/02/28 14:12:45  black
# change DADS URL root.  Again
#
# Revision 1.5  2010/09/27 17:02:20  black
# Update DADS URLs
#
# Revision 1.4  2009/02/04 16:08:13  black
# Update DADS URL root
#
# Revision 1.3  2004/12/17 17:12:49  black
# Refine XREFS into IMA, etc.  Make more XHTML compliant.
#
# Revision 1.2  2003/11/19 15:01:14  black
# Add xref to new term: shortest common superstring
#
# Revision 1.1  2003/11/19 14:49:50  black
# Initial revision
#

# entry name
@NAME=longest common substring
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=search
# the definition
@DEFN=Find the longest {substring} of two or more {strings}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={longest common subsequence}, {shortest common superstring}

# any notes.  these will not be printed in the final dictionary
@NOTES=
The longest common substring is contiguous, while the longest common
subsequence need not be.
# further explanation (pure HTML)
@LINKS=
Dan Hirschberg's <a
href="http://www.ics.uci.edu/~dan/class/161/notes/6/Dynamic.html">pseudocode</a>
as an example of {dynamic programming}
# implementation(s) (pure HTML)
@IMPL=<a
href="http://www3.cs.stonybrook.edu/~algorith/files/longest-common-substring.shtml">(C
and Mathematica)</a>
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/longestCommonSubstring.trm,v $
