# *created  "Fri Sep 18 09:53:42 1998" *by "Paul E. Black"
# *modified "Mon Mar  8 09:31:49 2004" *by "Paul E. Black"

# $Log: array.trm,v $
# Revision 1.2  2004/03/08 15:29:18  black
# Refine XREFS into IMA, etc.  Add reference to sorted array.
#

# entry name
@NAME=array
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial)
@AREA=basic
# the definition
@DEFN=A set of items which are randomly accessible by numeric index.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT={dynamic array}, {sorted array}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={array index}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={associative array}

# any notes.  these will not be printed in the final dictionary
@NOTES=An unordered array must be searched with a {linear search}.
Average search time may be improved using a {move-to-front heuristic}
in some cases.
An {external index}, such as a {hash table} or {inverted index} may
help make an {array search} quicker and speed overall processing if
the array is not changed often.
If the array is kept sorted, a {binary search} or {interpolation
search} is faster.  
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# John Morris morris@ee.uwa.edu.au
<A
href="http://ciips.ee.uwa.edu.au/~morris/Year2/PLDS210/arrays.html#arrays">(C)</A>,
<A href="http://gams.nist.gov/serve.cgi/Class/N1">Read and write
different arrays (Fortran, C++)</A>
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/array.trm,v $
