# *created  "Fri Jul 19 16:35:10 2002" *by "Paul E. Black"
# *modified "Fri Sep  4 10:54:54 2009" *by "Paul E. Black"

# $Log: binaryGCD.trm,v $
# Revision 1.12  2009/09/04 15:48:17  black
# cite Knuth with V:PP (volume number, colon, page number)
#
# Revision 1.11  2009/09/04 14:56:16  black
# refer to algorithm "name" in Knuth with section context, as he does.
#
# Revision 1.10  2009/08/03 13:45:06  black
# update cut-the-knot LINK
#
# Revision 1.9  2008/11/20 21:09:36  black
# Fix refs to Knuth vol 1 and 2 to 1997
#
# Revision 1.8  2008/07/11 16:03:10  black
# Remove WEB entry for Knuth's algorithm B: Knuth reuses one letter
# algorithm names, so it is a local designator, not a "name".
#
# Revision 1.7  2008/07/11 15:46:57  black
# Add Peyser's correction to Eichstadt's refinement.  Update
# cut-the-knot.com LINK.
#
# Revision 1.6  2006/04/04 11:54:32  black
# Note non-obvious improvement suggested by Torsten.
#
# Revision 1.5  2005/08/29 12:50:04  black
# drop Shallit URL from INFO - gone.  drop "algorithm" from NAME
#
# Revision 1.4  2004/12/17 17:27:46  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/07/07 16:14:55  black
# Change AKA algorithm B to WEB Knuth's algorithm B.
#
# Revision 1.2  2004/07/06 12:43:54  black
# Refine XREFS into IMA, etc. and add RCS keywords.  Explain the meaning
# of u and v in the definition.  Improve Shallit link.
#

# entry name
@NAME=binary GCD
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=numeric
# the definition
@DEFN=Compute the {greatest common divisor} of two
integers, $u$ and $v$, expressed in binary.  The run time complexity is
{$O((\log<sub>2</sub> u v)<sup>2</sup>)$#big-O notation} bit
operations.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={Euclid's algorithm}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
#<strong>Paul E. Black</strong>, <em>Hypothetical Intelligence</em>,
#Proc. Everything XV, Provo, Utah, USA, 2(7):30-32, February 1997.
# any notes.  these are not printed in the final dictionary
@NOTES=Discovered by J. Stein in 1967.  Another source says discovered
by R. Silver and J. Tersian in 1962 and published by G. Stein in 1967.
<p>
The algorithm uses the following observations.
<ul>
<li>If u and v are both even, gcd(u,v) = 2 gcd(u/2, v/2).
<li>If u is even and v is odd, gcd(u,v) = gcd(u/2, v).
<li>Otherwise both are odd, and gcd(u,v) = gcd(|u-v|/2, v).  (Euclid's
algorithm with a division by 2 since the difference of two odd numbers
is even.)
</ul>
</p>

<p>
Here is the algorithm.  It is especially efficient for operations on
binary representations.
<ol>
<li> g = 1

<li> while u is even and v is even
<ul>
<li> u = u/2 (right shift)
<li> v = v/2
<li> g = 2*g (left shift)
</ul>
now u or v (or both) are odd

<li> while u &gt; 0
<ul>
<li> if u is even, u = u/2
<li> else if v is even, v = v/2
<li> else
<ul>
<li> t = |u-v|/2
<li> if u < v, then v = t else u = t
</ul>
</ul>

<li> return v*g
</ol>
</p>

<p>
Knuth calls this algorithm 4.5.2B in
<a href="../terms.html#Knuth97">[Knuth97, 2:338]</a>.
Torsten Eichst&auml;dt suggested incrementing g in step 2.3 (g++) and 
returning v left shifted g times in step 4 (return v&lt;&lt;g).
4 April 2006.  
Alex Peyser pointed out that g must start at 0.  10 July 2008.
# further explanation (pure HTML)
@LINKS=
<a href="http://www.cut-the-knot.org/blue/binary.shtml">Binary
Euclid's Algorithm</a> including examples and references.
# implementation(s) (pure HTML)
@IMPL=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/binaryGCD.trm,v $
