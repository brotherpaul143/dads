# *created  "Tue Mar 14 09:44:32 2000" *by "Paul E. Black"
# *modified "Fri Dec 17 11:50:22 2004" *by "Paul E. Black"

# $Log: fergusonForcade.trm,v $
# Revision 1.2  2004/12/17 16:50:24  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=Ferguson-Forcade algorithm
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=numeric
# the definition
@DEFN=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={Euclid's algorithm}, {extended Euclid's algorithm}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=<strong>Helaman R. P. Ferguson and Rodney W. Forcade</strong>,
<em>Multidimensional Euclidean algorithms</em>, Journal Fur Dir Reine
Und Angewandte Mathematik 334:171-181, 1982.  Walter de Gruyter &amp; Co.
# any notes.  these will not be printed in the final dictionary
@NOTES=
<p>
Introduction. Given a pair (x, y) of positive real numbers, then one
iteration of the Euclidean algorithm replaces the larger number by its
least non-negative residue modulo the smaller number. If the two
numbers are linearly dependent, the repetition of this process will
eventually terminate with a pair in which one of the elements is
zero. (If the original pair were integers, then the remaining non-zero
element is their {greatest common divisor}.)
</p>

<p>
Another property of the Euclidean algorithm, fundamental to the study
of continued fractions, is that it produces increasingly good rational
approximations to the original pair of real numbers.
</p>

<p>
We will construct an iterative algorithm for n-tuples, generalizing
both the terminating and approximating features of the Euclidean
algorithm. Thus, if the original n-tuple of elements are Z-linearly
dependent, the algorithm will necessarily terminate and discover the
Z-relation among the elements of the original n-tuple. If the original
n-tuple elements are not Z-linearly dependent, then the algorithm will
"absolutely approximate" by producing lattice points arbitrarily close
to the line generated by the original n-tuple.
</p>

<p>
We emphasize that a major difficulty in the problem of constructing a
generalization of the Euclidean algorithm is to give an iterative
algorithm.
</p>
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials (see authors.data)
@AUTHOR=
# end $Source: /home/black/DADS/Terms/RCS/fergusonForcade.trm,v $
