# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Thu Aug 22 15:41:58 2013" *by "Paul E. Black"

# $Log: merge.trm,v $
# Revision 1.4  2013/08/22 19:41:59  black
# update URL for Alex Lopez-Ortiz at U waterloo
#
# Revision 1.3  2007/11/30 17:10:43  black
# make XREFs into VARIANTs
#
# Revision 1.2  2004/12/17 16:53:08  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=merge
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=sort
# the definition
@DEFN=Combine two or more sorted sequences of data into a single sorted 
sequence.
# formal definition or {cross reference} to an entry
@FORML=
For simplicity, let input be two sequences, A=$\{a<sub>1</sub>, \ldots,
a<sub>n</sub>}$ and B=$\{b<sub>1</sub>, \ldots, b<sub>m</sub>}$, each sorted
according to some {total order}, $\leq$.  The output is a single
sequence, merge(A,B), which is a sorted {permutation} of $\{a<sub>1</sub>,
\ldots, a<sub>n</sub>, b<sub>1</sub>, \ldots, b<sub>m</sub>}$.
</p>

<p>
merge(A, B) is
<ol>
<li> A, if B is empty, 
<li> B, if A is empty, 
<li> \{a<sub>1</sub>}.merge($\{a<sub>2</sub>, \ldots, a<sub>n</sub>}$,
B) if a<sub>1</sub> <= b<sub>1</sub>, and 
<li> \{b<sub>1</sub>}.merge(A, $\{b<sub>2</sub>, \ldots,
b<sub>m</sub>}$) otherwise.  
</ol>
The symbol "." stands for concatenation, for example, $\{a<sub>1</sub>, \ldots,
a<sub>n</sub>}.\{b<sub>1</sub>, \ldots, b<sub>m</sub>} =
\{a<sub>1</sub>, \ldots, a<sub>n</sub>, b<sub>1</sub>, \ldots,
b<sub>m</sub>}$.
</p>

<p>
Formalization by Mustafa Ege &lt;ege@eti.cc.hun.edu.tr&gt;.
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT={multiway merge}, {k-way merge}, 
{simple merge}, {ideal merge}, {optimal merge}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={two-way merge sort}, {three-way merge sort}, 
{k-way merge sort}, {balanced merge sort}, {nonbalanced merge sort}

# any notes.  these will not be printed in the final dictionary
@NOTES=
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<a href="http://www.cs.grinnell.edu/~stone/events/scheme-workshop/merge.html">(Scheme)</a>
# author's initials
@AUTHOR=ASK
# end $Source: /home/black/DADS/Terms/RCS/merge.trm,v $
