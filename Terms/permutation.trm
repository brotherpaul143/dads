# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Mon Mar  9 13:31:16 2015" *by "Paul E. Black"

# $Log: permutation.trm,v $
# Mon Mar  9 13:32:02 2015  Paul E. Black
# Add Bostocks IMPL and animations of different permutation algorithms.
# 
# Mon Mar  2 16:12:44 2015  Paul E. Black
# Remove Combinatorial Object Server IMPL - all of COS is gone.
# 
# Tue Sep  2 08:45:03 2014  Paul E. Black
# Change stonybrook.edu URL in IMPL
# 
# Mon Jul 28 16:23:55 2014  Paul E. Black
# update URL for Skienas Stony Brook Algorithm Respository IMPLs
# 
# Revision 1.14  2013/08/22 19:23:22  black
# Gilleland's server is gone.
#
# Revision 1.13  2009/01/09 22:15:14  black
# Rename "perfect shuffle" to "ideal random shuffle".
#
# Revision 1.12  2007/11/26 15:30:52  black
# Use "n" to NOTE the number of permutations, to be consistent with the
# formulas in "combination".
#
# Revision 1.11  2007/11/26 14:53:29  black
# NOTE there are m! permutations.
#
# Revision 1.10  2006/10/16 16:23:04  black
# Remove Rhoads' IMPL - not at Rutgers, and Google doesn't find a new URL
#
# Revision 1.9  2005/08/24 14:30:06  black
# Clarify included definition of derangement.
#
# Revision 1.8  2005/06/20 13:03:17  black
# Update Rhoads' URL.
#
# Revision 1.7  2005/03/22 22:01:05  black
# Johnson-Trotter is a VARIANT, not INME.  NOTE the relation between a
# derangement and a permutation.
#
# Revision 1.6  2005/02/02 20:38:14  black
# Fix typo in IMPL language.
#
# Revision 1.5  2005/01/10 14:29:02  black
# Update Oleg Kiselyov's URL
#
# Revision 1.4  2004/12/17 17:24:26  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/07/30 16:56:31  black
# Move the good algorithm to randomly permute elements to its own (new)
# entry: it is called the Fisher-Yates shuffle.  Move Ben Pfaff's
# shuffle implementation there.
#
# Revision 1.2  2004/03/30 17:19:19  black
# Refine XREFS into IMA, etc.  Refer to Ben Pfaff's shuffle impl.
#

# entry name
@NAME=permutation
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=combin
# the definition
@DEFN=A rearrangement of elements, where none are lost, added, or
changed.  The {Fisher-Yates shuffle} randomly permutes elements.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=shuffle
# other cross-listings solely for the web, such as word or spelling variants
@WEB=permute

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={combination}
# Specialization: "... is a kind of me."
@VARIANT={ideal random shuffle}, {Fisher-Yates shuffle}, {Johnson-Trotter},
{sort}, {derangement}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={American flag sort}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={pseudo-random number generator}

# any notes.  these will not be printed in the final dictionary
@NOTES=A {sort} is a permutation where the items are arranged in some
order.
A {derangement} is a permutation where no item is in its original
position.
</p>

<p>
There are {$n!$#factorial} permutations of $n$ (distinguishable) elements.

# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
<a
href="http://www3.cs.stonybrook.edu/~algorith/files/generating-permutations.shtml">(Pascal,
Fortran, Mathematica, and C)</a>;
<a href="http://gams.nist.gov/serve.cgi/Class/N8">(Fortran)</a>.
Mike Bostock's animations of different
<a href="http://bost.ocks.org/mike/shuffle/">permutation algorithms
with code (JavaScript)</a>.
<a
href="http://okmij.org/ftp/Haskell/perfect-shuffle.txt">Perfect
shuffle (Haskell)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/permutation.trm,v $
