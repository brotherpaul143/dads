# *created  "Tue Sep 15 16:54:05 1998" *by "Paul E. Black"
# *modified "Wed Jun 11 14:27:28 2003" *by "Paul E. Black"

# entry name
@NAME=AVL tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, search, sort, graph, combin(atorial), etc.
@AREA=tree
# the definition
@DEFN=A {balanced#balanced binary tree} {binary search tree}
where the {height} of the two
subtrees ({children#child}) of a node differs by at most one.
Look-up, insertion, and deletion are {O($\log n$)#big-O notation},
where $n$ is the number of {nodes} in the tree.
# comma-separated list of cross references, i.e., See also ...
@XREFS={left rotation}, {right rotation}, {red-black tree},
{height-balanced tree}, {B-tree}, {threaded tree}, {Fibonacci tree}
# any notes.  these will not be printed in the final dictionary
@NOTES=If necessary, the tree is rebalanced after insertions or
deletions using rotations.
</P>

<P>
The structure is named for the inventors, Adelson-Velskii and Landis
(1962).
</P>

<P>
After Gary Grubb &lt;ggrubb@sr.hp.com&gt;.
# further explanation (pure HTML)
@LINKS=
<A
href="http://www.autoobjects.com/Home/Teaching/CmpE_126/CmpE_126_Lectures/AVL_Tree/avl_tree.html">examples
of various insertions and deletion</A>;
# John Morris morris@ee.uwa.edu.au
<A
href="http://ciips.ee.uwa.edu.au/~morris/Year2/PLDS210/AVL.html">explanation and
example</A>.
# implementation(s) (pure HTML)
@IMPL=
Ben Pfaff's <A href="http://adtinfo.org/">explanations and code
(C)</A>,
<A
href="http://pentagon.cs.jhu.edu/~jkloss/htmls/structures/src/kloss/structures/AVLTree.java">(Java)</A>
needs insert, delete, search, etc. from the <A
href="http://pentagon.cs.jhu.edu/~jkloss/htmls/structures/src/kloss/structures/functions/">functions
directory</A>,
Worst-case behavior of <A
href="http://www.auto.tuwien.ac.at/~blieb/woop/avl.html">traversal,
annotated for real time (WOOP/ADA)</A>.
# author's initials
@AUTHOR=PEB
# end
