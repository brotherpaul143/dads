# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Fri Dec 17 12:14:16 2004" *by "Paul E. Black"

# $Log: chineseRmndr.trm,v $
# Revision 1.3  2004/12/17 17:14:17  black
# Refine XREFS into IMA, etc.
#
# Revision 1.2  2003/12/03 16:51:16  black
# Standard clean-up edits
#

# entry name
@NAME=Chinese remainder theorem
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=numeric
# the definition
@DEFN=An integer $n$ can be solved uniquely mod 
{LCM($A(i)$)#least common multiple}, given modulii ($n
mod A(i)$), $A(i) &gt; 0$ for $i=1..k$, $k &gt; 0$.
In other words, given the remainders an integer gets when
it's divided by an arbitrary set of divisors, you
can uniquely determine the integer's remainder when it is
divided by the least common multiple of those divisors.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# any notes.  these will not be printed in the final dictionary
@NOTES=For example, knowing the remainder of $n$ when it's
divided by 3 and the remainder when it's divided by 5 allows you to
determine the remainder of $n$ when it's divided
by LCM(3,5) = 15.
After LK.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/chineseRmndr.trm,v $
