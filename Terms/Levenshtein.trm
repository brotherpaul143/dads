# *created  "Wed Jun  2 13:42:31 1999" *by "Phillip Laplante"
# *modified "Mon Feb 11 17:05:11 2019" *by "Paul E. Black"

# $Log: Levenshtein.trm,v $
# Mon Feb 11 17:05:43 2019  Paul E. Black
# use https to access Wikipedia
# 
# Mon Jun 22 11:57:03 2015  Paul E. Black
# Access wikibooks with https.
# 
# Revision 1.11  2013/08/22 19:16:30  black
# update URL for Gilleland's IMPL
#
# Revision 1.10  2008/08/14 16:11:52  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.9  2008/03/26 13:17:21  black
# XREF Jaro-Winkler, too, since it is a distance measure
#
# Revision 1.8  2007/06/11 12:26:13  black
# Change WikiSource IMPL, which is gone, to WikiBooks.
#
# Revision 1.7  2005/11/10 14:32:52  black
# LINK to Wikipedia entry and Wikisource IMPL
#
# Revision 1.6  2005/01/04 15:39:51  black
# Remove ristad LINK - gone.
#
# Revision 1.5  2004/12/17 17:22:57  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/12/13 21:43:10  black
# XREF Hamming distance.  Edit operation is INME.  Make <anchors>..</a>
# XHTML compatible.
#
# Revision 1.3  2004/05/05 18:24:07  black
# Change (main) name from edit distance to Levenshtein distance to honor
# the inventor of an efficient algorithm.  Add a second definition - an
# algorithm to find the distance.  Add BIB references.  Remove the PHP
# link - it didn't really help.  Note that the IMPL link has a great
# explanation and links to code in many programming languages.
#
# Revision 1.2  2004/05/03 16:19:36  black
# Refine XREFS into IMA, etc.  Add IMA string matching with errors.
#

# entry name
@NAME=Levenshtein distance
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=combin
# the definition
@DEFN=(1) The smallest number of insertions, deletions, and substitutions
required to change one {string} or {tree} into another.  (2) A
{$\Theta(m \times n)$#$\Theta$} algorithm to compute the distance
between strings, where $m$ and $n$ are the lengths of the strings.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=edit distance
# other cross-listings solely for the web, such as word or spelling variants
@WEB=Levenshtein string distance

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={string matching with errors}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={edit operation}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={double metaphone}, {soundex}, {Jaro-Winkler}, {Hamming distance}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>Vladimir I. Levenshtein</strong>, <em>Binary codes capable of
correcting deletions, insertions, and reversals</em>,
Doklady Akademii Nauk SSSR, 163(4):845-848, 1965 (Russian).
English translation in Soviet Physics Doklady, 10(8):707-710, 1966.
<br />(Doklady is Russian for "Report".  Sometimes transliterated in
English as Doclady or Dokladi.)

# any notes.  these will not be printed in the final dictionary
@NOTES=
(1) From Algorithms and Theory of Computation Handbook, page 14-35,
Copyright &copy; 1999 by CRC Press LLC.
Appearing in the Dictionary of Computer Science, Engineering and
Technology, Copyright &copy; 2000 CRC Press LLC.
# further explanation (pure HTML)
@LINKS=
<a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Wikipedia
entry</a> which has links to implementations.
March 2003
<a
href="http://www.uni-bielefeld.de/(en)/ZIF/FG/2002Combinatorics/02-reception.html">pictures
of Levenshtein</a> at a reception.
# implementation(s) (pure HTML)
@IMPL=
Michael Gilleland's 
<a
href="http://people.cs.pitt.edu/~kirk/cs1501/Pruhs/Spring2006/assignments/editdistance/Levenshtein Distance.htm">Levenshtein distance
(Java, C++, Visual Basic)</a>, includes a great explanation and links
to code in Perl, C, JavaScript, Python, and many more languages.
Many implementations
<a href="https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Levenshtein_distance">(Ada,
C++, Lisp, Io, Java, OCaml, Octave, PHP, Python, Ruby, Visual Basic)</a>.

# author's initials (see authors.data)
@AUTHOR=CRC-A
# end $Source: /home/black/Workspace/dads/Terms/RCS/Levenshtein.trm,v $
