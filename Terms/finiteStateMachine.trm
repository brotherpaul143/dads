# *created  "Wed Jun  2 13:42:31 1999" *by "Phillip Laplante"
# *modified "Fri Dec 17 12:28:06 2004" *by "Paul E. Black"

# $Log: finiteStateMachine.trm,v $
# Revision 1.4  2004/12/17 17:28:07  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/07/23 22:16:20  black
# Add links to implementations.  Change (xref to) transducer to the more
# precise finite state transducer.
#
# Revision 1.2  2004/07/06 13:08:24  black
# Refine XREFS into IMA, etc. and add RCS keywords.
#

# entry name
@NAME=finite state machine
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=autom
# the definition
@DEFN=A {model of computation} consisting of a set of {states}, a {start
state}, an input {alphabet}, and a {transition function} that maps
input symbols and current states to a {next state}.
Computation begins in the start state with an input string.  It
changes to new states depending on the transition function.
There are many variants, for
instance, machines having actions (outputs)
associated with transitions ({Mealy machine}) or states ({Moore machine}),
multiple start states,
transitions conditioned on no input symbol (a null) or more than one
transition for a given symbol and state ({nondeterministic finite
state machine}),
one or more states designated as {accepting states} ({recognizer}), etc.
# formal definition or {cross reference} to an entry
@FORML=
# comma-separated list of pure names
@AKA=finite state automaton
# other cross-listings solely for the web, such as word or spelling variants
@WEB=finite automaton

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={model of computation}, {Turing machine}
# Specialization: "... is a kind of me."
@VARIANT={deterministic finite state machine}, 
{Kripke structure},
{finite state transducer}, {Markov chain}, {hidden Markov model}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# any notes.  these will not be printed in the final dictionary
@NOTES=
Equivalent to a restricted {Turing machine} where the head is
read-only and shifts only from left to right.
After Algorithms and Theory of Computation Handbook, page 24-19,
Copyright &copy; 1999 by CRC Press LLC.
Appearing in the Dictionary of Computer Science, Engineering and
Technology, Copyright &copy; 2000 CRC Press LLC.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
Jan Daciuk's
<a href="http://juggernaut.eti.pg.gda.pl/~jandac/fsa.html">Finite
state utilities (C++)</a> including many links to other code, papers,
etc.
<a href="http://odur.let.rug.nl/~vannoord/Fsa/">Finite State Automata
Utilities (Prolog)</a>, which generate C code, minimize, visualize,
etc.  Page has binaries, too.
For regular expressions <a
href="http://www.cs.kent.ac.uk/people/staff/sjt/craft2e/regExp.html">generate
NFSM, make deterministic, and optimize (Haskell)</a>.
Oleg Kiselyov's program to <a
href="http://pobox.com/~oleg/ftp/Prolog/minimizer.prl">minimize a
finite state machine (Prolog)</a>.
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/finiteStateMachine.trm,v $
