# *created  "Wed Aug  4 10:38:37 1999" *by "Paul E. Black"
# *modified "Mon Jul 16 10:30:28 SAST 2012" *by "Vreda Pieterse"

# $Log: nand.trm,v $
# Revision 1.3  2012/07/17 12:47:02  black
# Checked in Vreda's change
#
# Revision Mon Jul 16 10:30:28 SAST 2012 vreda
# Corrected the 'AND' in the definition to 'NAND' and added {xor} as a x-ref
#
# Revision 1.2  2004/12/17 17:05:45  black
# Refine XREFS into IMA, etc.  Add RCS keywords.
#

# entry name
@NAME=nand
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=basic
# the definition
@DEFN=Negated conjunction: 0 NAND 0 = 1, 0 NAND 1 = 1, 1 NAND 0 = 1, 1 NAND 1 = 0.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={and}, {not}, {or}, {xor}

# any notes.  these will not be printed in the final dictionary
@NOTES=NAND is equivalent to AND followed by NOT.  It is of particular
interest because all possible {boolean functions} can be built with
combinations of NANDs, and a NAND gate is easily built.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/nand.trm,v $
