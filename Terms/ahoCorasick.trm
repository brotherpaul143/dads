# *created  "Fri Jul 23 16:34:11 2004" *by "Vadim Okun"
# *modified "Mon Nov  2 10:54:58 2020" *by "Paul E. Black"

# $Log: ahoCorasick.trm,v $
# Mon Nov  2 10:55:56 2020  Paul E. Black
# update Stony Brook IMPL URL
# 
# Tue Sep  2 08:36:26 2014  Paul E. Black
# Change stonybrook.edu URL in IMPL
# 
# Mon Jul 28 16:18:24 2014  Paul E. Black
# update URL for Skienas Stony Brook Algorithm Respository IMPLs
# 
# Revision 1.3  2006/09/21 17:09:00  black
# XREF Commentz-Walter
#
# Revision 1.2  2005/05/05 13:42:39  black
# Put href in double quotes.
#
# Revision 1.1  2005/05/05 13:39:13  black
# Initial revision
#

# entry name
@NAME=Aho-Corasick
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=search
# the definition
@DEFN=A multiple {string matching} algorithm that constructs a 
{finite state machine} from a {pattern} (list of keywords), then uses
the machine to locate all occurrences of the keywords in a body of text.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={string matching}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={Commentz-Walter} works from the back, like {Boyer-Moore}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=<strong>Alfred V. Aho</strong> and <strong>Margaret J. Corasick</strong>,
<em>Efficient string matching: an aid to bibliographic search</em>,
CACM, 18(6):333-340, June 1975.

# any notes.  these are not printed in the final dictionary
@NOTES=Construction of the machine takes time proportional to the
sum of the lengths of the keywords. The machine is used to process
the text string in a single pass.  The number of transitions made
by the machine is independent of the number of keywords.
# implementation(s) (pure HTML)
@IMPL=Bruce Watson's 
<a href="https://www3.cs.stonybrook.edu/~algorith/implement/watson/implement.shtml">SPARE
Parts, a string pattern recognition toolkit (C++)</a>.
# further explanation (pure HTML)
@LINKS=
# author's initials (see authors.data)
@AUTHOR=VO
# end
