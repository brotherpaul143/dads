# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Mon Sep 20 12:22:20 2004" *by "Paul E. Black"

# $Log: npcomplete.trm,v $
# Revision 1.3  2004/09/20 16:22:24  black
# Change Comp.Theory FAQ URL.
#
# Revision 1.2  2004/09/20 14:33:15  black
# Update Aaronson's Complexity Zoo URL.  Refine XREFS into IMA, etc.
# Add RCS keywords.
#

# entry name
@NAME=NP-complete
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=theory
# the definition
@DEFN=The {complexity class} of {decision problems} for which answers can be
checked for correctness, given a {certificate}, by an algorithm whose
run time is {polynomial#polynomial time} in the size of the input
(that is, it is {NP})
and no other NP problem is more than a polynomial factor harder.
Informally, a problem is NP-complete if answers can be verified
quickly, and a quick algorithm to solve this problem can be used to
solve all other NP problems quickly.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names or {cross refs} that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=NPC

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={NP-hard}, {P}, {AP}

# any notes.  these will not be printed in the final dictionary
@NOTES=A trivial example of NP, but (presumably) not NP-complete is
finding the bitwise <strong>AND</strong> of two strings of $N$
boolean bits.  The problem is NP, since one can quickly 
(in time {$\Theta(N)$#\Theta}) verify that
the answer is correct, but knowing how to <strong>AND</strong> two
bit strings doesn't help one quickly find, say, a {Hamiltonian cycle} or
tour of a graph.  So bitwise <strong>AND</strong> is not
NP-complete (as far as we know).
# further explanation (pure HTML)
@LINKS=History, definitions, examples, etc. given in <A
href="http://db.uwaterloo.ca/~alopez-o/comp-faq/faq.html">Comp.Theory
FAQ</A>, scroll down to <strong>P vs. NP</strong>.  A
<A href="http://www.nada.kth.se/~viggo/problemlist/compendium.html">compendium
of NP optimization problems</A>.  
</P>

<P>
Scott Aaronson's
<A href="http://www.complexityzoo.com/">Complexity
Zoo</A>
# implementation(s) (pure HTML)
@IMPL=Stas Busygin's <A
href="http://www.busygin.dp.ua/npc.html">NP-Completeness Page with
QUALEX and SAT01 (C++)</A>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/npcomplete.trm,v $
