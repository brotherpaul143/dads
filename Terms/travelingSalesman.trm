# *created  "Wed Sep 16 08:59:44 1998" *by "Paul E. Black"
# *modified "Thu Jan 18 14:01:31 2007" *by "Paul E. Black"

# $Log: travelingSalesman.trm,v $
# Revision 1.6  2007/01/18 19:02:04  black
# The solution is approximate, not absolute.
#
# Revision 1.5  2007/01/18 16:48:32  black
# add Grothmann IMPL
#
# Revision 1.4  2005/01/10 16:08:06  black
# Fix Telia (animations) and Princeton, now GA Tech (links to
# challenges) URLs.  Remove keck.caam.rice (solver packages) URL -
# redirects to GA Tech, which only has one academic-only package.
#
# Revision 1.3  2005/01/10 15:50:59  black
# Remove Coyote Gulch (genetic algo) URL - site shows as "Temporarily
# unavailable".
#
# Revision 1.2  2004/12/17 16:55:15  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=traveling salesman
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# basic, search, sort, graph, combin(atorial), etc.
@AREA=graph
# the definition
@DEFN=Find a {path} through a {weighted graph} which starts and
ends at the same {vertex}, includes every other vertex exactly
once, and minimizes the total cost of {edges}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=TSP
# other cross-listings solely for the web, such as word or spelling variants
#		British spelling has two l's
@WEB=travelling salesman problem, traveling salesman problem

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={bottleneck traveling salesman}, {Hamiltonian cycle},

{optimization problem}, {Christofides algorithm},
similar problems: {all pairs shortest path}, {minimum spanning tree}, 
{vehicle routing problem}
# any notes.  these will not be printed in the final dictionary
@NOTES=Less formally, find a path for a salesman to visit every listed
city at the lowest total cost.
</p>

<p>
The above described path is always a {Hamiltonian cycle}, or
tour, however a Hamiltonian cycle need not be optimal.  The problem is
an optimization problem, that is, to find the shortest tour.  The
corresponding {decision problem} asks if there is a tour with a cost
less than some given amount.
See <a href="../terms.html#CLR90">[CLR90, page 969]</a>.
</p>

<p>
If the triangle inequality does not hold, that is $d<sub>ik</sub> &gt;
d<sub>ij</sub> + d<sub>jk</sub>$ for some i, j, k, there is no
possible polynomial time algorithm which guarantees near-optimal
result (unless P=NP).
</p>

<p>
If the triangle inequality holds,
you can quickly get a near-optimal solution by finding the {minimum
spanning tree}.  Convert the tree to a path by traversing the
tree, say by {depth-first search}, but go directly to the next
unvisited node, rather than repeating nodes.  {Christofides algorithm}
starts with a minimum spanning tree, but is more careful about
converting the tree to a path with results closer to optimal.

# further explanation (pure HTML)
@LINKS=Several <a
href="http://web.telia.com/~u85905224/tsp/TSP.htm">animations of
different heuristics</a>.
<a href="http://www.tsp.gatech.edu/">links to challenges,
advances, etc.</a>.
# implementation(s) (pure HTML)
@IMPL=Links to <a
href="http://www.densis.fee.unicamp.br/~moscato/TSPBIB_home.html">software</a>
as well as papers, preprints, reports, etc., on-line on this
and related problems, 
<a
href="http://www.cs.sunysb.edu/~algorith/files/traveling-salesman.shtml">(C,
Fortran, Pascal, Mathematica, and C++)</a>.
Approximate <a
href="http://mathsrv.ku-eichstaett.de/MGF/homes/grothmann/java/tsp.html">solver
(Java)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/travelingSalesman.trm,v $
