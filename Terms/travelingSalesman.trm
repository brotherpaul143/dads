# *created  "Wed Sep 16 08:59:44 1998" *by "Paul E. Black"
# *modified "Mon Jul 15 12:29:12 2019" *by "Paul E. Black"

# $Log: travelingSalesman.trm,v $
# Tue Feb 19 10:49:19 2019  Paul E. Black
# Add U Arizona IMPL and animation.
# 
# Tue Sep  2 08:54:01 2014  Paul E. Black
# Change stonybrook.edu URL in IMPL
# 
# Mon Jul 28 16:26:12 2014  Paul E. Black
# update URL for Skienas Stony Brook Algorithm Respository IMPLs
# 
# Revision 1.12  2013/08/28 13:43:01  black
# update LINK to tsp page
#
# Revision 1.11  2013/04/10 17:53:50  black
# change "which"s to "that"s.  Misc. formatting.
#
# Revision 1.10  2010/12/27 17:03:23  black
# Remove Moscato IMPL - page moved or deleted
#
# Revision 1.9  2010/07/12 14:58:35  black
# remove LINK to tella.com animations: access gets an error(?) page in a
# Scandanavian(?) language.
#
# Revision 1.8  2009/02/09 12:53:16  black
# Remove Grothmann's IMPL - it is only a heuristic solver (I think its
# meant more to demonstrate graph drawing than solving TSP) and it
# moved.
#
# Revision 1.7  2008/11/10 18:10:15  black
# update URL for Moscato's IMPL page
#
# Revision 1.6  2007/01/18 19:02:04  black
# The solution is approximate, not absolute.
#
# Revision 1.5  2007/01/18 16:48:32  black
# add Grothmann IMPL
#
# Revision 1.4  2005/01/10 16:08:06  black
# Fix Telia (animations) and Princeton, now GA Tech (links to
# challenges) URLs.  Remove keck.caam.rice (solver packages) URL -
# redirects to GA Tech, which only has one academic-only package.
#
# Revision 1.3  2005/01/10 15:50:59  black
# Remove Coyote Gulch (genetic algo) URL - site shows as "Temporarily
# unavailable".
#
# Revision 1.2  2004/12/17 16:55:15  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=traveling salesman
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# basic, search, sort, graph, combin(atorial), etc.
@AREA=graph
# the definition
@DEFN=Find a {path} through a {weighted graph} that starts and
ends at the same {vertex}, includes every other vertex exactly
once, and minimizes the total cost of {edges}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=TSP
# other cross-listings solely for the web, such as word or spelling variants
#		British spelling has two l's
@WEB=travelling salesman problem, traveling salesman problem

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={bottleneck traveling salesman}, {Hamiltonian cycle},
{optimization problem}, {Christofides algorithm},
similar problems: {all pairs shortest path}, {minimum spanning tree}, 
{vehicle routing problem}

# any notes.  these will not be printed in the final dictionary
@NOTES=Less formally, find a path for a salesman to visit every listed
city at the lowest total cost.
</p>

<p>
The above described path is always a {Hamiltonian cycle}, or
tour, however a Hamiltonian cycle need not be optimal.  The problem is
an optimization problem, that is, to find the shortest tour.  The
corresponding {decision problem} asks if there is a tour with a cost
less than some given amount.
See <a href="../terms.html#CLR90">[CLR90, page 969]</a>.
</p>

<p>
If the triangle inequality does not hold, that is $d<sub>ik</sub> &gt;
d<sub>ij</sub> + d<sub>jk</sub>$ for some i, j, k, there is no
possible polynomial time algorithm that guarantees near-optimal
result (unless P=NP).
</p>

<p>
If the triangle inequality holds,
you can quickly get a near-optimal solution by finding the {minimum
spanning tree}.  Convert the tree to a path by traversing the
tree, say by {depth-first search}, but go directly to the next
unvisited node, rather than repeating nodes.  {Christofides algorithm}
starts with a minimum spanning tree, but is more careful about
converting the tree to a path with results closer to optimal.

# further explanation (pure HTML)
@LINKS=
<a href="http://www.math.uwaterloo.ca/tsp/">links to challenges,
advances, etc.</a>.
# implementation(s) (pure HTML)
@IMPL=
<a
href="http://algorist.com/problems/Traveling_Salesman.html">(C,
Fortran, Pascal, Mathematica, and C++)</a>.
# "The Icon Programming Language" -> "Odds and Ends"
Animation and
<a href="http://www2.cs.arizona.edu/icon/oddsends/travels/travels.htm">implementation
(Icon)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/travelingSalesman.trm,v $
