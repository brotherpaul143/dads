# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Fri Dec 17 16:52:00 2004" *by "Paul E. Black"

# $Log: heapproperty.trm,v $
# Revision 1.5  2004/12/17 21:52:54  black
# Also called priority queue ordering in GBY91.
#
# Revision 1.4  2004/12/17 17:23:58  black
# Make more XHTML compliant.
#
# Revision 1.3  2004/10/06 16:25:28  black
# Add that IMIN binary priority queue.
#
# Revision 1.2  2004/01/12 15:18:10  black
# Add RCS Log.  Refine XREFS into IMA, etc.  Be more accurate that a
# heap is a *complete* tree.
#

# entry name
@NAME=heap property
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=D
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=tree
# the definition
@DEFN=Each {node} in a {tree} has a {key} which is more
extreme (greater or less) than or equal to the key of its 
{parent}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=heap ordered, heap condition, priority queue ordering

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT={max-heap property}, {min-heap property}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={binary heap}, {heap}, {binary priority queue}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# any notes.  these will not be printed in the final dictionary
@NOTES=The {root} node has the largest or smallest key.
After LK.
</p>

<p>
A {complete tree} with the heap property is a {heap}.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/DADS/Terms/RCS/heapproperty.trm,v $
