# *created  "Tue Dec 15 11:05:07 1998" *by "Paul E. Black"
# *modified "Thu Jan  5 10:54:33 2006" *by "Paul E. Black"

# $Log: trie.trm,v $
# Revision 1.6  2006/09/11 14:02:30  black
# add a humorous note about the pronunciation
#
# Revision 1.5  2004/12/17 17:28:58  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/02/10 18:14:00  black
# Add variant: compact trie.  Add link to McGill's tries and suffix trees.
#
# Revision 1.3  2004/01/12 15:13:47  black
# Add Darius Bacon's implementation.
#
# Revision 1.2  2004/01/08 18:14:51  black
# Refine XREFS into IMA, etc.  Add BIB entries.  Make the "trie" stand
# out more in retrieval.
#

# entry name
@NAME=trie
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {tree} for storing {strings} in which there is one {node} for
every common {prefix}.  The strings are stored in extra {leaf} nodes.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={tree}
# Specialization: "... is a kind of me."
@VARIANT={bucket trie}, {Patricia tree}, {compact trie}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={digital tree}, {digital search tree}, {directed acyclic word
graph}, {compact DAWG}, {suffix tree}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>Renee de la Briandais</strong>, <em>File Searching Using
Variable Length Keys</em>, Proc. AFIPS Western Joint Computer
Conference, San Francisco, California, USA, 15:295-298, March 1959.
</p>

<p>
<strong>Edward Fredkin</strong>, <em>Trie Memory</em>,
CACM, 3(9):490-499, September 1960.

#	Algorithms & Theory of Computation Handbook, page 14-3
#	Fundamentals of Data Structures, Horowitz and Sahni, pp 517-525
# any notes.  these will not be printed in the final dictionary
@NOTES=The name comes from re<strong>TRIE</strong>val and is
pronounced, "tree."
<p>

</p> 
There are some who, in a sadly misguided attempt to verbally
distinguish a trie from the more general tree and in contrast to
typical English pronunciation (of which calorie, eerie, and reverie
are examples, but die, lie, and pie are not), pronounce the name
"try".

# implementation(s): pure HTML
@IMPL=
<a
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/344.ins.c">insert 
 (C)</a> and
<a
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/344.srch.c">search 
 (C)</a>,
Darius Bacon's
<a
href="http://www.accesscom.com/~darius/software/scheme-data-structures/trie.scm">functional
implementation (Scheme)</a>

# further explanation (pure HTML)
@LINKS=
# Winter 1997 Class Notes for 308-251
# DATA STRUCTURES AND ALGORITHMS
# Topic #7: TRIES AND SUFFIX TREES
Explanations of and comparisons between
<a href="http://www.cs.mcgill.ca/~cs251/OldCourses/1997/topic7/">tries
and suffix trees</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/trie.trm,v $
