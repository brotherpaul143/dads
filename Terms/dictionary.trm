# *created  "Tue Feb  2 13:01:38 1999" *by "Paul E. Black"
# *modified "Wed Oct  1 10:43:28 2003" *by "Paul E. Black"

# entry name
@NAME=dictionary
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=An {abstract data type} storing items, or
{keys}, associated with values.
Basic operations are insert, find, and delete.
# formal definition or {cross reference} to an entry
@FORML=The operations new(), insert(i, v, D), and find(i, D) may be
defined as follows.
<ol>
<li>new() returns a dictionary
<li>find(i, insert(i, v, D)) = v
<li>find(i, insert(j, v, D)) = find(i, D) if $i \neq j$
</ol>
where i and j are items or keys, v is a value, and D is a dictionary.
The operation find(i, new()) is not defined.
</P>

<P>
The modifier function delete(i, D) may be defined as follows.
<ol start="4">
<li>$delete(i, new()) = new()$
<li>$delete(i, insert(i, v, D)) = delete(i, D)$
<li>$delete(i, insert(j, v, D)) = insert(j, v, delete(i, D)) if i \neq j$
</ol>
</P>

<P>
We can define find(i, new()) using a special value: <em>fail</em>.
This only changes the return type of find.
<ol start="7">
<li>find(i, new()) = <em>fail</em>
</ol>
# comma-sep list of pure names or {cross refs} that this is Also Known As.
@AKA=association list, property list
# other cross-listings solely for the web, such as word or spelling variants
@WEB=assoc list, prop list, directory, database, data base
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={total order}, {associative array}, {set}
Some implementations: {linked list}, {hash table}, {B-tree}, 
{jump list}, {directed acyclic word graph}
# any notes.  these will not be printed in the final dictionary
@NOTES=The terms ``association list'' and ``property list'' are used with
LISP-like languages and in the area of Artificial Intelligence.  These
suggest a relatively small number of items, whereas a dictionary may
be quite large.  Professionals in the Data Management area have
specialized semantics for "dictionary" and related terms.
</P>

<P>
The keys of a dictionary are a {set}.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<A
href="http://www.cs.sunysb.edu/~algorith/files/dictionaries.shtml">(C++,
Pascal, and Fortran)</A>, <A
href="http://users.footprints.net/~kaz/kazlib.html">Kazlib (C)</A>
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/dictionary.trm,v $
