# *created  "Mon Oct 19 15:06:57 1998" *by "Paul E. Black"
# *modified "Thu Oct 16 12:56:14 EDT 2003" *by "Paul E. Black"

# entry name
@NAME=Dijkstra's algorithm
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=graph
# the definition
@DEFN=An algorithm to find the {shortest paths} from a single {source}
{vertex} to all other vertexes in a
{weighted, directed graph}.  All
weights must be nonnegative.
Implementing the {priority queue} with a {Fibonnaci heap} makes the
time complexity {$O(E + V \log V)$#big-O notation}, where $V$ is the
number of vertexes and $E$ is the number of {edges}.
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={Bellman-Ford algorithm}, {Johnson's algorithm},
{all pairs shortest path}
# any notes.  these will not be printed in the final dictionary
@NOTES=This is used in Johnson's algorithm.  Since Dijkstra's
algorithm chooses the closest vertex, it is a {greedy algorithm}.
</P>

<P>
After <A href="../terms.html#CLR90">[CLR90, page 527]</A>.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# John Morris morris@ee.uwa.edu.au
An <A href="http://ciips.ee.uwa.edu.au/~morris/Year2/PLDS210/dijkstra.html">analysis
with code (C)</A>
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/dijkstraalgo.trm,v $
