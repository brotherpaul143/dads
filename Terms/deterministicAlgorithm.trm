# *created  "Fri Feb 26 16:46:20 1999" *by "Paul E. Black"
# *modified "Wed Jan 14 12:05:21 2009" *by "Paul E. Black"

# $Log: deterministicAlgorithm.trm,v $
# Revision 1.4  2009/01/14 17:05:45  black
# Improve the explanation in the note.
#
# Revision 1.3  2009/01/14 17:01:17  black
# XREF randomized algorithm
#
# Revision 1.2  2004/12/17 16:49:42  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=deterministic algorithm
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=T
# basic theory numeric search sort tree graph combin(atorial) para(llel) crypt
@AREA=basic
# the definition
@DEFN=An {algorithm} whose behavior can be completely predicted from
the input.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={nondeterministic algorithm}, {randomized algorithm}

# any notes.  these will not be printed in the final dictionary
@NOTES=That is, each time a certain set of input is presented, the
algorithm does the same computations and gives the same results as any
other time the set of input is
presented.  For algorithms with state, or that maintain information
between inputs, "the input" means everything since the algorithm was
started from an initial state.
</p>

<p>
There can be degrees of deterministic behavior.  For instance, an
algorithm that uses random numbers is not usually considered
deterministic.  However if the "random numbers" come from a
{pseudo-random number generator}, the behavior may be deterministic.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/deterministicAlgorithm.trm,v $
