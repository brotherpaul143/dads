# *created  "Tue Dec 15 11:00:58 1998" *by "Paul E. Black"
# *modified "Mon Aug 12 09:46:44 2019" *by "Paul E. Black"

# $Log: suffixtree.trm,v $
# Mon Aug 12 09:47:56 2019  Paul E. Black
# Update Skiena algorist IMPL page name.
# 
# Mon Jun 24 15:09:22 2019  Paul E. Black
# Update Strmat URL
# 
# Mon Feb 11 17:11:33 2019  Paul E. Black
# use https to access Wikipedia
# 
# Tue Sep  2 08:48:17 2014  Paul E. Black
# Change stonybrook.edu URL in IMPL
# 
# Mon Jul 28 16:25:41 2014  Paul E. Black
# update URL for Skienas Stony Brook Algorithm Respository IMPLs
# 
# Revision 1.14  2011/10/11 16:13:58  black
# improve URL of wikipedia article
#
# Revision 1.13  2008/12/03 19:49:06  black
# remove LINK to McGill 1997 CS251 - appears to be completely gone
#
# Revision 1.12  2008/08/14 16:15:44  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.11  2007/12/07 19:25:47  black
# NOTE that suffix arrays have replaced suffix trees in many cases.
#
# Revision 1.10  2007/07/09 14:55:39  black
# Update Kreibich's libstree IMPL
#
# Revision 1.9  2007/02/16 17:42:33  black
# Use Nelson's web site, instead of the DePaul copy.
#
# Revision 1.8  2007/02/14 18:22:07  black
# add BIB for McCreight's original paper and Ukkonen's linear-time
# construction paper.  add Mark Nelson's IMPL and great explanation.
#
# Revision 1.7  2006/07/27 16:34:15  black
# Add Kreibich's IMPL
#
# Revision 1.6  2005/01/04 15:48:01  black
# Remove IMPL and LINKS (dna.lth.se, marti1, DDJ) that are gone or
# require registration.
#
# Revision 1.5  2004/12/17 17:28:52  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/05/24 12:48:24  black
# Remove edelkamp link - the site is not very useful.
#
# Revision 1.3  2004/05/24 12:43:09  black
# Update edelkamp LINK.  Make multi suffix tree a VARIANT.
#
# Revision 1.2  2004/02/10 18:13:11  black
# Refine XREFS into IMA, etc.  Add link to McGill's tries and suffix trees.
#

# entry name
@NAME=suffix tree
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A compact representation of a {trie}
corresponding to the {suffixes} of a given {string} where all
{nodes} with one {child} are merged with their {parents}.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={Patricia tree}, {trie}
# Specialization: "... is a kind of me."
@VARIANT={multi suffix tree}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={suffix array}, {directed acyclic word graph}

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>Edward M. McCreight</strong>, <em>A space-economical suffix
tree construction algorithm</em>, Journal of the ACM, 23:262-272,
1976.
</p>

<p>
<strong>Esko Ukkonen</strong>, <em>On-line construction of suffix
trees</em>, Algorithmica, 14(3):249-260, September 1995.<br />
A linear time, forward construction algorithm.  See
<a href="https://en.wikipedia.org/wiki/Ukkonen's_algorithm">Wikipedia
entry</a> for links to PDF of Ukkonen's paper.

# any notes.  these will not be printed in the final dictionary
@NOTES=A suffix tree is a Patricia tree corresponding to the suffixes
of a given string.  A directed acyclic word graph (DAWG) is a more
compact form.
</p>

<p>
The newer {suffix array} has replaced the suffix tree as the data
structure of choice in many applications.

# further explanation (pure HTML)
@LINKS=

# implementation(s) (pure HTML)
@IMPL=Strmat - a variety of <a
href="https://web.cs.ucdavis.edu/~gusfield/strmat.html">string matching
and pattern discovery algorithms (C)</a>.
Christian Kreibich's
<a href="http://www.icir.org/christian/libstree/">libstree (C)</a>
including depth- and breadth-first traversal, string update, and
examples like LCS.
Mark Nelson's great 
<a href="http://marknelson.us/1996/08/01/suffix-trees/">Fast
String Searching With Suffix Trees (C++)</a> explains Ukkonen's
linear-time algorithm.  Dr. Dobb's Journal, August, 1996.
Steven Skiena's
<a
href="http://algorist.com/problems/Suffix_Trees_and_Arrays.html">Suffix
Trees and Arrays (C++, Python, and Java)</a>.
# author's initials
@AUTHOR=SE
# end $Source: /home/black/Workspace/dads/Terms/RCS/suffixtree.trm,v $
