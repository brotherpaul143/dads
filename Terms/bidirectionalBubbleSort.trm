# *created  "Fri Mar  3 13:54:01 2000" *by "Paul E. Black"
# *modified "Mon Aug 24 10:02:14 2009" *by "Paul E. Black"

# $Log: bidirectionalBubbleSort.trm,v $
# Revision 1.6  2009/08/24 14:02:34  black
# Update Harrison's sorting demo URL root
#
# Revision 1.5  2007/12/17 15:29:31  black
# Remove java.sun.com IMPL - page is gone.
#
# Revision 1.4  2005/08/24 14:22:28  black
# XREF gnome sort
#
# Revision 1.3  2005/05/23 13:08:42  black
# Clarify wording in definition.  Add IMA sort.
#
# Revision 1.2  2004/12/17 16:48:23  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.
#

# entry name
@NAME=bidirectional bubble sort
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=sort
# the definition
@DEFN=A variant of {bubble sort} that compares each adjacent pair of
items in a {list} in turn, swapping them if necessary, and alternately
passes through the list from the beginning to the end then from the end
to the beginning. It stops when a pass does no swaps.
# comma-separated list of pure names or {cross references}
@AKA=cocktail shaker sort, shaker sort, double-direction bubble sort

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={sort}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={bubble sort}, {gnome sort}

# any notes.  these will not be printed in the final dictionary
@NOTES=Complexity is {O(n<sup>2</sup>)#big-O notation} for
arbitrary data, but approaches O(n) if the list is nearly in order at
the beginning.  Bidirectional bubble sort usually does better than
bubble sort since at least one item is moved forward or backward to
its place in the list with each pass.  Bubble sort moves items forward
into place, but can only move items backward one location each pass.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
<a
href="http://people.cs.ubc.ca/~harrison/Java/sorting-demo.html">demonstration
and source code (Java)</a>;
<a href="http://cg.scs.carleton.ca/~morin/misc/sortalg/">animation and
code, see cocktail sort (Java)</a>.
# author's initials (see authors.data)
@AUTHOR=PEB,BB
# end $Source: /home/black/Workspace/dads/Terms/RCS/bidirectionalBubbleSort.trm,v $
