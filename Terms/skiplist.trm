# *created  "Tue Dec  1 12:55:15 1998" *by "Paul E. Black"
# *modified "Tue May 20 10:59:25 2014" *by "Paul E. Black"

# $Log: skiplist.trm,v $
# Tue May 20 11:02:18 2014  Paul E. Black
# Put an earlier (1989) paper in the BIB entry.
# 
# Revision 1.8  2010/02/03 20:50:34  black
# NOTE connection between skip list and binary search.
#
# Revision 1.7  2007/01/03 17:01:08  black
# Update URL for Walker's skip list tutorial and code.
#
# Revision 1.6  2006/03/20 13:37:37  black
# Add Walker's IMPL
#
# Revision 1.5  2004/12/17 17:24:41  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/08/16 15:38:21  black
# This is an ordered linked list, not (just) a linked list.  Refine
# XREFS into IMA, etc.
#
# Revision 1.3  2003/11/19 17:52:24  black
# Improve the description of the links - they're both to the same site!
#
# Revision 1.2  2003/09/25 15:57:44  black
# Add XREF to jump list, as a contrast.  Update links.
#

# entry name
@NAME=skip list
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=A {randomized#randomized algorithm} variant of an 
{ordered linked list}
with additional, parallel lists.
Parallel lists at higher levels skip geometrically more items.
Searching begins at the highest level, to quickly get to the right
part of the list, then uses progressively lower level lists.
A new item is added by randomly selecting a level, then inserting it
in order in the lists for that and all lower levels.  With enough
levels, searching is {$O(\log n)$#big-O notation}.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=skiplist

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={ordered linked list}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={randomized algorithm}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={jump list}

# bib refs, eg, to defining articles (pure HTML).  printed within <p>..</p>.
@BIB=<strong>William Pugh</strong>, <em>Concurrent Maintenance of Skip
Lists</em>, Tech. Report CS-TR-2222, Dept. of Computer Science,
U. Maryland, April 1989.

# any notes.  these will not be printed in the final dictionary
@NOTES=
A skip list may be seen as approximating {binary search} in a linked
list.

# further explanation (pure HTML)
@LINKS=<a href="http://epaperpress.com/sortsearch/">(click on
Dictionaries, then Skip Lists)
diagrams and explanation</a> (and code) at ePaperPress.
# implementation(s) (pure HTML)
@IMPL=
Julienne Walker's
<a
href="http://eternallyconfuzzled.com/tuts/datastructures/jsw_tut_skip.aspx">tutorial
(C)</a>.  Click "Libraries", then "Classic Skip List" for the zip'd code.
<a href="http://epaperpress.com/sortsearch/txt/skl.txt">Code (C)</a>
at ePaperPress.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/skiplist.trm,v $
