# *created  "Tue Jan 20 16:45:15 2004" *by "Paul E. Black"
# *modified "Thu Jan  6 16:41:26 2022" *by "Paul E. Black"

# $Log: burrowsWheelerTransform.trm,v $
# Thu Jan  6 16:44:53 2022  Paul E. Black
# Update URL to use https for Mark Nelson NOTE
# 
# Tue Feb 19 10:31:53 2019  Paul E. Black
# Use underscore (_) instead of space in Wikipedia reference.
# 
# Mon Dec  5 11:39:20 2016  Paul E. Black
# Improve DEFN (use "permute" instead of rarrange).  Add a note relating
# the output array and suffix array.  Use special "new" Wikipedia:
# citation, instead of hard-coded URL.
# 
# Revision 1.4  2008/08/14 16:14:10  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.3  2007/02/16 19:10:20  black
# Add Nelson's explanation and IMPL.
#
# Revision 1.2  2004/12/17 17:27:50  black
# Make more XHTML compliant.
#
# Revision 1.1  2004/01/20 22:18:34  black
# Initial revision

# entry name
@NAME=Burrows-Wheeler transform
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=crypt
# the definition
@DEFN={Permute#permutation} a {string}. Repeated {substrings} lead
to repeated 
characters in the permuted string, which is easier to compress.
Knowing which character was last in the original string, the original
can be reconstructed from the rearranged string.

# formal definition or {cross reference} to an entry
@FORML=

# comma-sep list of pure names that this is Also Known As.
@AKA=BWT
# other cross-listings solely for the web, such as name or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME={sort}
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
<strong>Michael Burrows and David J. Wheeler</strong>, <em>A
Block-sorting Lossless Data Compression Algorithm</em>, Research
Report SRC-124, Digital Equipment Corporation, Palo Alto, California,
May 1994.
<br />
This transform is algorithm C in the paper.

# any notes.  these are not printed in the final dictionary
@NOTES=
The transform may be defined in relation to the {suffix array} as follows.
The result is an {array} BWT such that 
<br />
 &nbsp; &nbsp; BWT[i] = T[SA[i]-1], if SA[i] &gt; 1, otherwise $$
<br />
where T is the original string,
i goes from 1 ({1-based indexing}) to the length of T,
SA is the suffix array of T, and
$$ is the special character indicating the end of string.

# any historical notes
@HISTORY=
# implementation(s) (pure HTML)
@IMPL=
Mark Nelson's great 
<a href="https://marknelson.us/1996/09/01/bwt/">Data Compression with
the Burrows-Wheeler Transform (C++)</a> explains the algorithm.
Dr. Dobb's Journal, September, 1996.
# further explanation (pure HTML)
@LINKS=
{Wikipedia:Burrows-Wheeler_transform}.
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/burrowsWheelerTransform.trm,v $
