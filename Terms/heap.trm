# *created  "Fri Sep 18 12:10:28 1998" *by "Paul E. Black"
# *modified "Mon Jul 22 08:54:30 2002" *by "Paul E. Black"

# entry name
@NAME=heap
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {tree} where every {node} has a {key} more extreme
(greater or less) than or equal to the key of its {parent}.
# comma-separated list of cross references, i.e., See also ...
@XREFS={build-heap},{heapsort},{binary heap},{k-ary heap},
{priority queue},{heap property},{treap},{complete binary tree}
# any notes.  these will not be printed in the final dictionary
@NOTES=Insertion is {O($\log<sub>2</sub> n$)#big-O notation} where $n$ is
the number of nodes.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<A
HREF="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/5/513.del.c">delete
(C)</A> and <A
HREF="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/5/513.ins.c">insert
(C and Pascal)</A> both of which use the auxiliary function <A
HREF="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/5/513.sift.c">siftup
(C and Pascal)</A>,
# John Morris morris@ee.uwa.edu.au
<A
HREF="http://ciips.ee.uwa.edu.au/~morris/Year2/PLDS210/heaps.html">explanation,
examples, and C code</A>,
<A HREF="http://gams.nist.gov/serve.cgi/ModuleComponent/8600/Fullsource/NETLIB/561">(Fortran)</A>
# author's initials
@AUTHOR=CLK
# end
