# *created  "Fri Jul  5 16:18:10 2002" *by "Paul E. Black"
# *modified "Fri Jul  5 16:37:53 2002" *by "Paul E. Black"

# entry name
@NAME=perfect shuffle
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=combin
# the definition
@DEFN=A {permutation} algorithm, or shuffle, that has exactly the same
chance of producing any permutation.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names or {cross refs} that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=
# comma-separated list of {cross references}.  printed as "See also ..."
@XREFS=
# bib refs, eg, to defining article (pure HTML).  printed within <P>..</P>
@BIB=
#<strong>Paul E. Black</strong>, <em>Hypothetical Intelligence</em>,
#Proc. Everything XV, Provo, Utah, USA, 2(7):30-32, February 1997.
# any notes.  these are not printed in the final dictionary
@NOTES=Attaching random tags then sorting (see {permutation}) may not
be a perfect shuffle: if tags may be duplicated, a {stable} sort
has a greater chance of producing permutations with some items in the
original order.
# implementation(s) (pure HTML)
@IMPL=Discussion and explanation of what makes a shuffle perfect and <A
href="http://pobox.com/~oleg/ftp/Haskell/perfect-shuffle.txt">two
implementations (Haskell)</A>.
# further explanation (pure HTML)
@LINKS=
# author's initials (see authors.data)
@AUTHOR=PEB
# end
