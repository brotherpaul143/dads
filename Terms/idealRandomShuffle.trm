# *created  "Fri Jul  5 16:18:10 2002" *by "Paul E. Black"
# *modified "Mon Dec 27 11:50:50 2010" *by "Paul E. Black"

# $Log: idealRandomShuffle.trm,v $
# Revision 1.7  2010/12/27 16:51:08  black
# remove Python IMPL - moved or gone
#
# Revision 1.6  2009/01/13 20:23:54  black
# Improve HISTORY wording.
#
# Revision 1.5  2009/01/12 21:58:52  black
# rename perfect shuffle to be ideal random shuffle and note in HISTORY.
# Remove temp stuff about card shuffling, except as a note.  IMA
# randomized algorithm.  Add Phython IMPL
#
# Revision 1.4  2005/02/04 13:59:24  black
# Add VARIANT Fisher-Yates shuffle
#
# Revision 1.3  2005/01/10 14:28:58  black
# Update Oleg Kiselyov's URL
#
# Revision 1.2  2004/12/17 16:53:35  black
# Refine XREFS into IMA, etc.  Add RCS keywords.  Make more XHTML compliant.

# entry name
@NAME=ideal random shuffle
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=combin
# the definition
@DEFN=A {permutation} algorithm, or shuffle,
that has exactly the same chance of producing any permutation.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={randomized algorithm}
# Specialization: "... is a kind of me."
@VARIANT={Fisher-Yates shuffle}
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# bib refs, eg, to defining article (pure HTML).  printed within <p>..</p>
@BIB=
#<strong>Paul E. Black</strong>, <em>Hypothetical Intelligence</em>,
#Proc. Everything XV, Provo, Utah, USA, 2(7):30-32, February 1997.
# any notes.  these are not printed in the final dictionary
@NOTES=Attaching random tags then sorting (see {permutation}) may not
work: if tags may be duplicated, a deterministic sort will not
randomly switch the order of elements with duplicate tags.

# any historical notes
@HISTORY=
Formerly called "perfect shuffle".  Renamed in January 2009 when Dave
Bayer pointed out that the term is almost universally used to mean
dividing a list of elements (or deck of cards) exactly in half then
precisely interleaving the two halves.  This has been the use of
"perfect shuffle" for decades.

# implementation(s) (pure HTML)
@IMPL=
Discussion and explanation of what makes a shuffle ideal and <a
href="http://okmij.org/ftp/Haskell/perfect-shuffle.txt">two
implementations (Haskell)</a>.

# further explanation (pure HTML)
@LINKS=
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/idealRandomShuffle.trm,v $
