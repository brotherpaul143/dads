# *created  "Thu Oct 15 08:41:50 1998" *by "Paul E. Black"
# *modified "Thu Oct 27 10:00:23 2005" *by "Paul E. Black"

# $Log: hash.trm,v $
# Revision 1.6  2005/10/27 14:00:26  black
# Update John Morris' URL
#
# Revision 1.5  2004/12/17 17:28:10  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/05/14 16:45:35  black
# Improve wording of IMPLs a little.
#
# Revision 1.3  2004/02/11 17:35:49  black
# Add a link to Bob Jenkin's hash function and comparison page.
#
# Revision 1.2  2004/02/10 20:17:50  black
# Refine XREFS into IMA, etc.  Add RCS Log.  Add link for FNV hash.
#

# entry name
@NAME=hash function
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=A function that maps {keys} to integers, usually to
get an even distribution on a smaller set of values.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=hash

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=different kinds: {linear hash}, {perfect hashing}, 
{minimal perfect hashing}, {order preserving minimal perfect hashing}, 
specific functions: {Pearson's hash}, {multiplication method}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={hash table}, {uniform hashing}, {universal hashing}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={simple uniform hashing}
# any notes.  these will not be printed in the final dictionary
@NOTES=The range of integers is typically $[0\ldots m-1]$ where $m$ is
a prime number or a power of 2.
# further explanation (pure HTML)
@LINKS=
# John Morris morris@ee.uwa.edu.au
<a
href="http://www.cs.auckland.ac.nz/software/AlgAnim/hash_func.html">Hashing
Functions</a>.

# implementation(s) (pure HTML)
@IMPL=
See the implementations at <a
href="http://www.nist.gov/dads/HTML/minimalPerfectHash.html">minimal
perfect hashing (C++ and C)</a> and <a
href="http://www.nist.gov/dads/HTML/pearsonshash.html">Pearson's hash
(C)</a>.
A fast, parameterizable, broadly applicable
<a href="http://burtleburtle.net/bob/hash/doobs.html">hash function
(C)</a> including code for and evaluations of many other hash
functions.
A review and comparison of many
<a href="http://www.concentric.net/~Ttwang/tech/inthash.htm">integer hash functions (C)</a>.
Overview of
<a
href="http://www.cs.fsu.edu/~cop4531/slideshow/chapter12/12-3.html">different
kinds of hash functions</a>.
<a href="http://www.isthe.com/chongo/tech/comp/fnv/">Fowler/Noll/Vo or
FNV hash function (C)</a>.
Hash functions for strings
# This implementation is okay - PEB 6 April 1999
<a href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/331.hash.c">(C)</a>
and
<a href="http://www.octavian.org/cs/software.html">(C and
Perl)</a>.
<a
href="http://users.footprints.net/~kaz/kazlib.html">Kazlib (C)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/hash.trm,v $
