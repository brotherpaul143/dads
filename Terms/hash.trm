# *created  "Thu Oct 15 08:41:50 1998" *by "Paul E. Black"
# *modified "Wed Feb  4 10:40:40 2009" *by "Paul E. Black"

# $Log: hash.trm,v $
# Revision 1.20  2009/02/04 15:45:26  black
# Hyphenate name.
#
# Revision 1.19  2008/11/17 18:55:27  black
# Update Mulvey's IMPL URL
#
# Revision 1.18  2008/11/17 17:52:26  black
# Remove Kazlib IMPL - its been gone at least 3 months.
#
# Revision 1.17  2008/09/02 12:47:47  black
# Update Mulvey's URL
#
# Revision 1.16  2008/05/16 20:18:08  black
# I'M IN locality-sensitive hashing.
#
# Revision 1.15  2008/03/10 18:14:45  black
# note that Appleby's pages include avalanche diagrams.
#
# Revision 1.14  2008/03/10 18:08:54  black
# Add Appleby's MurmurHash.
#
# Revision 1.13  2007/12/17 17:01:41  black
# Update Mulvey's IMPL URL.  Combine Partow's IMPL URLs.
#
# Revision 1.12  2007/05/21 12:44:45  black
# Update URL for Herbert Glarner's IMPL
#
# Revision 1.11  2007/02/05 14:59:09  black
# Add Partow's IMPL of many hash functions in many languages.
#
# Revision 1.10  2006/07/17 16:39:58  black
# Add Mulvey's tutorial, implementations, and comparisons page.
# Explicitly credit Bob Jenkins.
#
# Revision 1.9  2006/07/17 13:12:50  black
# Add Glarner's IMPL
#
# Revision 1.8  2006/03/13 14:02:14  black
# Add http:// to Partow's IMPL
#
# Revision 1.7  2005/11/23 16:54:30  black
# Add IMIN Bloom filter.  Add Partow's IMPL.
#
# Revision 1.6  2005/10/27 14:00:26  black
# Update John Morris' URL
#
# Revision 1.5  2004/12/17 17:28:10  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/05/14 16:45:35  black
# Improve wording of IMPLs a little.
#
# Revision 1.3  2004/02/11 17:35:49  black
# Add a link to Bob Jenkin's hash function and comparison page.
#
# Revision 1.2  2004/02/10 20:17:50  black
# Refine XREFS into IMA, etc.  Add RCS Log.  Add link for FNV hash.
#

# entry name
@NAME=hash function
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=A function that maps {keys} to integers, usually to
get an even distribution on a smaller set of values.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=hash

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=different kinds: {linear hash}, {perfect hashing}, 
{minimal perfect hashing}, {order-preserving minimal perfect hashing}, 
specific functions: {Pearson's hash}, {multiplication method}
# Aggregate parent: "I am a part of or used in ..."
@IMIN={hash table}, {uniform hashing}, {universal hashing}, 
{Bloom filter}, {locality-sensitive hashing}
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={simple uniform hashing}
# any notes.  these will not be printed in the final dictionary
@NOTES=The range of integers is typically $[0\ldots m-1]$ where $m$ is
a prime number or a power of 2.
# further explanation (pure HTML)
@LINKS=
# John Morris morris@ee.uwa.edu.au
<a
href="http://www.cs.auckland.ac.nz/software/AlgAnim/hash_func.html">Hashing
Functions</a>.

# implementation(s) (pure HTML)
@IMPL=
See the implementations at <a
href="http://www.nist.gov/dads/HTML/minimalPerfectHash.html">minimal
perfect hashing (C++ and C)</a> and <a
href="http://www.nist.gov/dads/HTML/pearsonshash.html">Pearson's hash
(C)</a>.
Bob Jenkins' fast, parameterizable, broadly applicable
<a href="http://burtleburtle.net/bob/hash/doobs.html">hash function
(C)</a> including code for and evaluations of many other hash
functions.
A review and comparison of many
<a href="http://www.concentric.net/~Ttwang/tech/inthash.htm">integer hash functions (C)</a>.
Austin Appleby's fast
<a href="http://murmurhash.googlepages.com/">MurmurHash (C)</a>,
including avalanche diagrams for Hsieh SuperFastHash, Jenkin's
lookup3, Murmur, Bernstein, FNV, and modified FNV.
Overview of
<a
href="http://www.cs.fsu.edu/~cop4531/slideshow/chapter12/12-3.html">different
kinds of hash functions</a>.
Bret Mulvey's great tutorial on good hash functions, including
analysis of and code for 
<a href="http://bretm.home.comcast.net/~bretm/hash/">FNV,
Jenkin's hashes, SHA-1, and other hash and evaluation functions (C#)</a>.
Herbert Glarner's 
<a href="http://herbert.gandraxa.com/herbert/hsh.asp">HSH 11/13 algorithm
(Linoleum)</a>, including very thorough justification.
<a href="http://www.isthe.com/chongo/tech/comp/fnv/">Fowler/Noll/Vo or
FNV hash function (C)</a>.
Arash Partow's implementations of various
<a href="http://www.partow.net/programming/hashfunctions/#Download">General
Hash Functions (C, C++, Pascal, Object Pascal, Java, Ruby, Python)</a>
and Bloom filter for strings.
Hash functions for strings
# This implementation is okay - PEB 6 April 1999
<a href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/331.hash.c">(C)</a>
and
<a href="http://www.octavian.org/cs/software.html">(C and
Perl)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/hash.trm,v $
