# *created  "Mon May 15 14:03:39 2000" *by "Paul E. Black"
# *modified "Mon May 23 10:01:09 2011" *by "Paul E. Black"

# $Log: rightThreadedTree.trm,v $
# Revision 1.6  2011/05/23 14:01:14  black
# update URL for Ben Pfaff's work
#
# Revision 1.5  2004/12/17 17:24:36  black
# Make more XHTML compliant.
#
# Revision 1.4  2004/10/06 14:24:52  black
# Improve wording of note, in particular, use "key" instead of "value".
#
# Revision 1.3  2004/09/07 16:55:45  black
# Update Ben Pfaff's URL (again).
#
# Revision 1.2  2004/04/07 12:54:54  black
# Refine XREFS into IMA, etc.  Update Pfaff's URL.  Add IMA threaded tree.
#

# entry name
@NAME=right-threaded tree
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=tree
# the definition
@DEFN=A variant of a {threaded tree} in which only the right thread,
i.e. {link} to the successor, of each {node} is maintained.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={threaded tree}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={binary search tree}

# any notes.  these are not printed in the final dictionary
@NOTES=Keeping only the right thread, rather than both left and right
threads, keeps it quick to find the next greater key and faster to
insert and delete.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=Ben Pfaff's 
<a href="http://adtinfo.org/">explanations and
code (C)</a>
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/rightThreadedTree.trm,v $
