# *created  "Wed Dec 23 08:43:34 1998" *by "Paul E. Black"
# *modified "Wed Sep 29 11:00:35 2004" *by "Paul E. Black"

# $Log: coalescedChaining.trm,v $
# Revision 1.2  2004/09/29 20:21:10  black
# Remove trailing blank line.  Refine XREFS into IMA, etc.  Add RCS keywords.
#

# entry name
@NAME=coalesced hashing
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=An {array} that is indexed by a {hash function}.  An
item whose hash value is occupied (a {collision}) is put in the
next empty place in the array and added to the end of a {list}
embedded in the array items.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names or {cross refs} that this is Also Known As.
@AKA=
# other cross-listings solely for the web, such as word or spelling variants
@WEB=coalesced chaining

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={hash table}, {chaining}, {separate chaining hashing}

# any notes.  these will not be printed in the final dictionary
@NOTES=Deletion may be hard because finding collisions again relies on
not creating empty spots.  One solution is to mark an entry as deleted
so it can be reused for insertion, but leave the search list intact.
Any list search algorithm may be used to search the collision list.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=<A
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/3312.ins.c">insert
(C)</A>, <A
href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/3312.srch.c">search
(C)</A>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/coalescedChaining.trm,v $
