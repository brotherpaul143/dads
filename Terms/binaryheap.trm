# *created  "Fri Dec 18 14:19:17 1998" *by "Paul E. Black"
# *modified "Wed Aug 25 13:04:07 1999" *by "Paul E. Black"
# entry name
@NAME=binary heap
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=tree
# the definition
@DEFN=A {complete binary tree} where every {node} has a {key}
more extreme (greater or less) than or equal to the key of its 
{parent}.
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={heapify},{k-ary heap},{heap},{binomial heap}
# any notes.  these will not be printed in the final dictionary
@NOTES=An {array} implementation stores the keys in an array.
The parent of a node is the node's index in the array,
divided by two, rounded down.

<P>
Merging two binary heaps is {O(n)#big-O notation}: the best you can do
is just concatenate two heap arrays and make a heap of the result.
Two {binomial heaps} can be merged in O(ln n).
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=CLK
# end
