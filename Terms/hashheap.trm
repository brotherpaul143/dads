# *created  "Fri Dec 18 14:19:17 1998" *by "Paul E. Black"
# *modified "Tue Aug 12 14:52:53 2003" *by "Paul E. Black"

# entry name
@NAME=hash heap
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=An efficient implementation of a {priority queue}.  The 
{linear hash} function monotonically maps keys to {buckets}, and
each bucket is a {heap}.
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={bucket sort}
# any notes.  these will not be printed in the final dictionary
@NOTES=This is a bucket sort where the buckets are organized as heaps.
The linear hash function maps increasing keys into nondecreasing
values, that is, key1 &gt; key2 implies h(key1) is greater than or
equal to h(key2).  It is not clear what happens if a bucket gets full.
</P>

<P>
Let R be the ratio between the key range and the
range of the hash function.  If R is so large there is only one
bucket, we have a regular heap.  If R is one, it is a direct
mapped array.  This data structure was proposed by Chris L. Kuszmaul
&lt;fyodor@nas.nasa.gov&gt; in the news group comp.theory 13 January
1999.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
# author's initials
@AUTHOR=PEB
# end
