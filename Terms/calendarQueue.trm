# *created  "Thu Feb 11 16:40:46 1999" *by "Paul E. Black"
# *modified "Mon Oct 28 09:17:45 2002" *by "Paul E. Black"

# entry name
@NAME=calendar queue
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=S
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=search
# the definition
@DEFN=A fast {priority queue} implementation having N buckets each
with width w, or covering w time.  An item with priority p more
than current goes in bucket (p/w)%N.   Choose N and w to have few
items in each bucket.  Keep items sorted within buckets.  Double
or halve N and change w if the number of items grows or shrinks a lot.
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={bucket sort}
# bib refs, eg, to defining articles (pure HTML).  printed within <P>..</P>.
@BIB=<strong>Randy Brown</strong>, <em>Calendar Queues: A Fast 0(1)
Priority Queue Implementation for the Simulation Event Set Problem</em>,
CACM, 31(10):1220-1227, October 1988.
</P>

<P>
<strong>R. Jain</strong>,
<em>The Art of Computer Systems Performance Analysis</em>,
John Wiley and Sons, Inc., 1996, page 410.
# any notes.  these will not be printed in the final dictionary
@NOTES=
# further explanation (pure HTML)
@LINKS=<A
HREF="http://www.computer.org/proceedings/ss/0128/01280020abs.htm">Dynamic
Calendar Queue</A>.
# implementation(s) (pure HTML)
@IMPL=
In a <A
HREF="http://www.cise.ufl.edu/~fishwick/CPUDisk/queuing_code.html">simulation
tool package (C)</A>
# author's initials
@AUTHOR=PEB
# end
