# *created  "Tue May 25 08:56:47 1999" *by "Paul E. Black"
# *modified "Mon Mar  4 09:57:04 2019" *by "Paul E. Black"

# $Log: towersOfHanoi.trm,v $
# Mon Mar  4 09:57:33 2019  Paul E. Black
# Update Javascriptsource IMPL URL
# 
# Mon Feb 25 11:51:46 2019  Paul E. Black
# Update JavaScript IMPL URL
# 
# Revision 1.9  2011/11/14 17:12:03  black
# update URL for Javascript IMPL
#
# Revision 1.8  2008/12/15 14:41:46  black
# Remove LINK to Puzzle Archive: it moved to www.puzzlearchive.com, a
# wiki, and doesn't have an entry for Towers of Hanoi.
#
# Revision 1.7  2008/11/10 18:19:09  black
# update brainy planet URL - something stopped interpreting "percent
# sign" HTML "quotes".
#
# Revision 1.6  2007/04/23 13:25:00  black
# Mukundan gives an IMPL
#
# Revision 1.5  2007/04/23 13:21:36  black
# Update URL for Mukundan's Java demos and code
#
# Revision 1.4  2006/01/09 16:07:18  black
# Update LINK for background and solution
#
# Revision 1.3  2004/12/17 17:24:57  black
# Make more XHTML compliant.
#
# Revision 1.2  2004/08/25 13:04:52  black
# Refine XREFS into IMA, etc. and add RCS keywords.
#

# entry name
@NAME=towers of Hanoi
# _A_lgorithm, algo _T_echnique, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=P
# autom basic theory search sort tree graph combin numeric etc. see areas.data
@AREA=combin
# the definition
@DEFN=Given three posts (towers) and <em>n</em> disks of decreasing
sizes, move the disks from one post to another one at a time without
putting a larger disk on a smaller one.  The minimum is
2<sup>n</sup>-1 moves.  The "ancient legend" was invented by De
Parville in 1884.

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA=
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS=

# any notes.  these will not be printed in the final dictionary
@NOTES=A solution using {recursion} is: to move <em>n</em> disks
from post A to post B 1) recursively move the top <em>n-1</em>
disks from post A to C, 2) move the <em>n<sup>th</sup></em> disk from A to B,
and 3) recursively move the <em>n-1</em> disks from C to B.  A
solution using {iteration} is: on odd-numbered moves, move the
smallest disk clockwise.  On even-numbered moves, make the single
other move which is possible.
</p>

<p>
<a href="../terms.html#GCG92">[GCG92]</a> gives generalizations of the
puzzle, algorithms, and proofs.
# further explanation (pure HTML)
@LINKS=
<a
href="http://brainyplanet.com/index.php/Hanoi Solution">Background
and a recursive and an iterative solution</a>.
# implementation(s) (pure HTML)
@IMPL=
<a href="https://javascriptsource.com/hanoi/">(JavaScript)</a>
Mukundan's 
<a href="http://www.cosc.canterbury.ac.nz/mukundan/dsal/ToHdb.html">animation
(Java)</a>.
# author's initials (see authors.data)
@AUTHOR=PEB
# end $Source: /home/black/Workspace/dads/Terms/RCS/towersOfHanoi.trm,v $
