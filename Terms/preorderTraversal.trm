# *created  "Wed Feb  3 13:42:31 1999" *by "Paul E. Black"
# *modified "Thu Aug 14 12:15:16 2008" *by "Paul E. Black"

# $Log: preorderTraversal.trm,v $
# Revision 1.7  2008/08/14 16:15:17  black
# Update HTML line break (br) tags to be XML/XHMTL compatible
#
# Revision 1.6  2007/11/02 18:19:51  black
# IMA depth-first search
#
# Revision 1.5  2007/04/23 13:35:18  black
# Mukundan gives an IMPL
#
# Revision 1.4  2007/04/23 13:21:04  black
# Update URL for Mukundan's Java demos and code
#
# Revision 1.3  2004/12/17 17:24:30  black
# Make more XHTML compliant.
#
# Revision 1.2  2004/08/25 13:20:14  black
# Refine XREFS into IMA, etc. and note that IMA tree traversal.  Add RCS
# keywords.
#

# entry name
@NAME=preorder traversal
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic numeric search sort graph combin(atorial) tree theory para(llel)
@AREA=tree
# the definition
@DEFN=Process all {nodes} of a {tree} by processing the {root}, then
{recursively#recursion} processing all subtrees.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names that this is Also Known As.
@AKA=prefix traversal
# other cross-listings solely for the web, such as word or spelling variants
@WEB=

#    These are all comma-separated lists of {cross references}
# Generalization: "I am a kind of ..."
@IMA={tree traversal}, {depth-first search}
# Specialization: "... is a kind of me."
@VARIANT=
# Aggregate parent: "I am a part of or used in ..."
@IMIN=
# Aggregate child: "... is a part of or used in me."
@INME=
# Other cross references that don't fit the above.  printed as "See also ..."
@XREFS={in-order traversal}, {postorder traversal}, 
{level-order traversal}

# any notes.  these will not be printed in the final dictionary
@NOTES=For instance, if the "processing" is just printing, a tree is
printed as "root (first subtree) (second subtree) ... (last subtree)."
Here is pseudocode for a {binary tree}:
<pre>
preorder(tree)<br />
begin<br />
    if tree is null, return;<br /><br />
    print(tree.root);<br />
    preorder(tree.left_subtree);<br />
    preorder(tree.right_subtree);<br />
end
</pre>
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=
Mukundan's <a
href="http://www.cosc.canterbury.ac.nz/mukundan/dsal/BTree.html">animation (Java)</a>.
# author's initials
@AUTHOR=PEB
# end $Source: /home/black/DADS/Terms/RCS/preorderTraversal.trm,v $
