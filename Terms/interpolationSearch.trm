# *created  "Tue Feb  2 16:59:25 1999" *by "Paul E. Black"
# *modified "Thu Jan  9 14:26:30 2003" *by "Paul E. Black"

# entry name
@NAME=interpolation search
# _A_lgorithm, _D_efinition, _P_roblem, or data _S_tructure
@TYPE=A
# basic, numeric, search, sort, graph, combin(atorial), tree, theory
@AREA=search
# the definition
@DEFN=Search a {sorted array} by estimating the next position to check
based on a linear interpolation of the search {key} and the values at
the ends of the search interval.
# formal definition or {cross reference} to an entry
@FORML=
# comma-sep list of pure names or {cross refs} that this is Also Known As.
@AKA=extrapolation search
# other cross-listings solely for the web, such as word or spelling variants
@WEB=
# comma-separated list of {cross references}, i.e., See also ...
@XREFS={jump search}, {secant search}
# any notes.  these will not be printed in the final dictionary
@NOTES=You probably use this when looking something up in the
telephone book or dictionary.  For instance, "cold fusion" is probably
near the front, so you open maybe 1/4 of the way in.  What you find there
helps you decide whether to turn many pages or just a few.  Compare
this with a {linear search}, where you check each entry in order
from the beginning, or a {binary search}, where you always divide
the search interval exactly in half.  Unless the data is very uniform,
there are millions of records, or comparisons are very
time-consuming, a binary search is probably no slower since
interpolation is usually time-consuming on a computer and a  
binary search only takes log(n) comparisons anyway.
# further explanation (pure HTML)
@LINKS=
# implementation(s) (pure HTML)
@IMPL=Worst-case behavior <A
href="http://www.auto.tuwien.ac.at/~blieb/woop/fibsearc.html">annotated
for real time (WOOP/ADA)</A>, including bibliography,
<A href="http://www.dcc.uchile.cl/~rbaeza/handbook/algs/3/322.srch.p">(Pascal)</A>
# author's initials
@AUTHOR=PEB
# end
